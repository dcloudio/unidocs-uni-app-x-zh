{"UniKeyEvent":{"name":"## UniKeyEvent","description":"","extends":"```mermaid\ngraph LR\n  \nUniKeyEvent -- Extends --> UniEvent\n  style UniEvent color:#42b983\n  click UniEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unievent\"\n```","param":"\n### UniKeyEvent 的属性值 @unikeyevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| keyCode | number | 是 | - | - | - |\n| keyType | string | 是 | - | - | - |\n","compatibility":"### UniKeyEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniEvent":{"name":"## UniEvent","description":"","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | 事件的名称 |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | 事件的名称 |\n| eventInit | any | 是 | - | - | 事件初始参数。支持字段：`bubbles`表明该事件是否冒泡。可选，默认为false；`cancelable`表明该事件是否可以被取消。可选，默认为false。 |\n\n### UniEvent 的属性值 @unievent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| bubbles | boolean | 是 | - | - | 是否冒泡 |\n| cancelable | boolean | 是 | - | - | 是否可以取消 |\n| type | string | 是 | - | - | 事件类型 |\n| target | [UniElement](/dom/unielement.md) | 否 | - | - | 触发事件的组件 |\n| currentTarget | [UniElement](/dom/unielement.md) | 否 | - | - | 当前组件 |\n| timeStamp | number | 是 | - | - | 事件发生时的时间戳 |\n","methods":{"stopPropagation":{"name":"#### stopPropagation(): void @stoppropagation","description":"阻止当前事件的进一步传播","compatibility":"##### stopPropagation 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"","returnValue":"","tutorial":""},"preventDefault":{"name":"#### preventDefault(): void @preventdefault","description":"阻止当前事件的默认行为\n","compatibility":"##### preventDefault 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | x |\n","param":"","returnValue":"","tutorial":""}},"compatibility":"### UniEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniElement":{"name":"## UniElement","description":"UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。","extends":"","param":"\n### UniElement 的属性值 @unielement-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| classList | Array\\<string\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"x\"]]}' /> | 只读属性 获取当前元素的的 class 属性的动态集合。 |\n| firstChild | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素的的第一个子元素，如果元素是无子元素，则返回 null。 |\n| lastChild | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素的最后一个子元素，如果没有子元素，则返回 null。 |\n| parentElement | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素在 DOM 树中的父元素，如果没有父元素（如未添加到DOM树中），则返回null。 |\n| previousSibling | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素的前一个同级元素，没有则返回null。 |\n| nextElementSibling | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取在 DOM 树中紧跟在其后面的同级元素，如果指定的元素为最后一个元素，则返回 null。 |\n| children | Array\\<[UniElement](/dom/unielement.md)\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素包含的子元素的集合 |\n| tagName | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素的标签名 |\n| nodeName | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取当前元素的元素名称 |\n| dataset | Map\\<string, any> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"x\"]]}' /> | 只读属性 获取元素上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取元素上所有属性元素的集合 |\n| style | [CSSStyleDeclaration](/dom/cssstyledeclaration.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取元素的CSS样式对象 |\n| scrollWidth | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取可滚动元素内容的总宽度，仅scroll-view、list-view组件支持，其他组件返回视图宽度 |\n| scrollHeight | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 获取可滚动元素内容的总高度，仅scroll-view、list-view组件支持，其他组件返回视图高度 |\n| scrollLeft | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 获取或修改元素滚动条到元素左边的距离像素数，仅scroll-view、list-view组件支持。其他组件返回0 |\n| scrollTop | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 获取或修改元素滚动条到元素顶部的距离像素数，仅scroll-view、list-view组件支持。其他组件返回0 |\n| offsetLeft | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 元素的左边界偏移值 单位px |\n| offsetTop | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 元素的顶部边界偏移值 单位px |\n| offsetWidth | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 元素的布局宽度，宽度包含border、padding的数据值 单位px |\n| offsetHeight | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 只读属性 元素的布局高度，高度包含border、padding的数据值 单位px |\n| ext | Map\\<string, any> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"x\"]]}' /> | 只读属性 扩展属性 |\n","methods":{"takeSnapshot":{"name":"#### takeSnapshot(options: TakeSnapshotOptions): void @takesnapshot","description":"对当前组件进行截图，调用此方法会将当前组件（包含子节点）渲染结果导出成图片。\n成功会返回图片对应的临时文件路径，目前默认png格式\n","compatibility":"##### takeSnapshot 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| x | 3.93 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| options | **TakeSnapshotOptions** | 是 | - | - | 组件截图的参数对象 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| type | string | 否 | \"file\" | - | 截图导出类型，目前仅支持 'file' 保存到临时文件目录 |\n@| format | string | 否 | \"png\" | - | 截图文件格式，目前仅支持 'png' |\n@| success | (res: [TakeSnapshotSuccess](#takesnapshotsuccess-values)) => void | 否 | - | - | 接口调用成功的回调函数 |\n@| fail | (res: [TakeSnapshotFail](#takesnapshotfail-values)) => void | 否 | - | - | 接口调用失败的回调函数 |\n@| complete | (res: any) => void | 否 | - | - | 接口调用结束的回调函数（调用成功、失败都会执行） | \n\n###### TakeSnapshotSuccess 的属性值 @takesnapshotsuccess-values \n\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| tempFilePath | string | 是 | - | - | 截图保存的临时文件路径 |\n\n###### TakeSnapshotFail 的属性值 @takesnapshotfail-values \n\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| errMsg | string | 是 | - | - | - |\n","returnValue":"","tutorial":""},"appendChild":{"name":"#### appendChild(aChild: UniElement): void @appendchild","description":"将一个元素添加到指定父元素的子元素列表的末尾处。如果将被插入的元素已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。","compatibility":"##### appendChild 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| aChild | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 插入子元素对象 | \n","returnValue":"","tutorial":""},"insertBefore":{"name":"#### insertBefore(newChild: UniElement, refChild?: UniElement \\| null): UniElement \\| null @insertbefore","description":"在参考元素之前插入一个拥有指定父元素的子元素。如果给定的子元素是对文档中现有元素的引用，insertBefore() 会将其从当前位置移动到新位置。","compatibility":"##### insertBefore 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| newChild | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 插入子元素对象 |\n| refChild | [UniElement](/dom/unielement.md) | 否 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 | 必备 |\n| :- | :- | :- |\n| [UniElement](/dom/unielement.md) | UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。 | 否 |\n \n","tutorial":""},"insertBefore_1":{"name":"#### insertBefore(newChild: UniElement): UniElement \\| null @insertbefore","description":"将一个元素添加到指定父元素的子元素列表的末尾处 功能等同于appendChild","compatibility":"##### insertBefore 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| newChild | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 插入子元素对象 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 | 必备 |\n| :- | :- | :- |\n| [UniElement](/dom/unielement.md) | UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。 | 否 |\n \n","tutorial":""},"setAttribute":{"name":"#### setAttribute(key: string, value: string): void @setattribute","description":"设置指定元素上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。","compatibility":"##### setAttribute 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| key | string | 是 | - | - | 属性名称 |\n| value | string | 是 | - | - | 属性值域 | \n","returnValue":"","tutorial":""},"getAttribute":{"name":"#### getAttribute(key: string): string \\| null @getattribute","description":"获取元素指定的属性值，如果指定的属性不存在则返回null。","compatibility":"##### getAttribute 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| key | string | 是 | - | - | 属性名称 | \n","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| string | 否 |\n \n","tutorial":""},"hasAttribute":{"name":"#### hasAttribute(key: string): boolean @hasattribute","description":"返回改元素是否包含有指定的属性，属性存在则返回true，否则返回false。","compatibility":"##### hasAttribute 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| key | string | 是 | - | - | 属性名称 | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"removeAttribute":{"name":"#### removeAttribute(key: string): void @removeattribute","description":"从元素中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。","compatibility":"##### removeAttribute 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| key | string | 是 | - | - | 属性名称 | \n","returnValue":"","tutorial":""},"getBoundingClientRect":{"name":"#### getBoundingClientRect(): DOMRect @getboundingclientrect","description":"获取元素的大小及其相对于窗口的位置信息。","compatibility":"##### getBoundingClientRect 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| [DOMRect](/dom/domrect.md) | 一个 DOMRect 代表一个矩形。 |\n \n","tutorial":""},"getDrawableContext":{"name":"#### getDrawableContext(): DrawableContext \\| null @getdrawablecontext","description":"获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。","compatibility":"##### getDrawableContext 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| x | 3.9 | 4.11 | 4.25 |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| [DrawableContext](/dom/drawablecontext.md) | 否 |\n \n","tutorial":""},"removeChild":{"name":"#### removeChild(aChild: UniElement): UniElement \\| null @removechild","description":"从元素中删除一个子元素，返回删除的元素。","compatibility":"##### removeChild 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| aChild | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 被删除子元素对象 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 | 必备 |\n| :- | :- | :- |\n| [UniElement](/dom/unielement.md) | UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。 | 否 |\n \n","tutorial":""},"remove":{"name":"#### remove(): void @remove","description":"把元素对象从它所属的 DOM 树中删除。","compatibility":"##### remove 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"scrollTo":{"name":"#### scrollTo(x: number, y: number): void @scrollto","description":"使界面滚动到给定元素的指定坐标位置 仅scroll-view、list-view组件支持","compatibility":"##### scrollTo 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | x轴要滚动到坐标位置(单位px) |\n| y | number | 是 | - | - | y轴要滚动到坐标位置(单位px) | \n","returnValue":"","tutorial":""},"scrollBy":{"name":"#### scrollBy(x: number, y: number): void @scrollby","description":"使得元素滚动一段特定距离 仅scroll-view、list-view组件支持","compatibility":"##### scrollBy 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | x轴要滚动的距离(单位px) |\n| y | number | 是 | - | - | y轴要滚动的距离(单位px) | \n","returnValue":"","tutorial":""},"querySelector":{"name":"#### querySelector(selector: string.cssSelectorString): UniElement \\| null @queryselector","description":"返回文档中与指定选择器或选择器组匹配的第一个 Element对象。如果找不到匹配项，则返回null","compatibility":"##### querySelector 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| selector | [string.cssSelectorString](/uts/data-type.md#ide-string) | 是 | - | - | CSS 选择器字符串 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 | 必备 |\n| :- | :- | :- |\n| [UniElement](/dom/unielement.md) | UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。 | 否 |\n \n","tutorial":""},"querySelectorAll":{"name":"#### querySelectorAll(selector: string.cssSelectorString): UniElement[] \\| null @queryselectorall","description":"返回与指定的选择器组匹配的文档中的元素列表","compatibility":"##### querySelectorAll 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| selector | [string.cssSelectorString](/uts/data-type.md#ide-string) | 是 | - | - | CSS 选择器字符串 | \n","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| Array\\<[UniElement](/dom/unielement.md)\\> | 否 |\n \n","tutorial":""},"focus":{"name":"#### focus(): void @focus","description":"使元素获取焦点 仅input、Textarea组件支持","compatibility":"##### focus 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"blur":{"name":"#### blur(): void @blur","description":"使元素丢失焦点 仅input、Textarea组件支持","compatibility":"##### blur 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"getIOSView":{"name":"#### getIOSView(): UIView \\| null @getiosview","description":"获取元素ios原生view","compatibility":"##### getIOSView 兼容性 \n| Web | Android | Android uni-app x UTS 插件 | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- | :- |\n| - | x | x | x | 4.25 |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| UIView | 否 |\n \n","tutorial":""},"getAndroidView":{"name":"#### getAndroidView(): View \\| null @getandroidview","description":"获取元素android原生view 可能返回null","compatibility":"##### getAndroidView 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 4.25 | x |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| View | 否 |\n \n","tutorial":""},"getAndroidView_1":{"name":"#### getAndroidView\\<T>(): T \\| null @getandroidview","description":"获取元素android原生view 通过泛型定义view类型 可能返回null","compatibility":"##### getAndroidView 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 4.25 | x |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| T | 否 |\n \n","tutorial":""},"getAndroidActivity":{"name":"#### getAndroidActivity(): Activity \\| null @getandroidactivity","description":"获取元素android原生activity 可能返回null","compatibility":"##### getAndroidActivity 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 4.25 | x |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| Activity | 否 |\n \n","tutorial":""}},"compatibility":"### UniElement 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 4.0 | 4.11 |"},"CSSStyleDeclaration":{"name":"## CSSStyleDeclaration","description":"CSSStyleDeclaration表示一个CSS 声明块对象，它是一个 CSS 属性键值对的集合，暴露样式信息和各种与样式相关的方法和属性。","extends":"","param":"","methods":{"setProperty":{"name":"#### setProperty(name: string \\| string.cssPropertyString, value: any \\| null): void @setproperty","description":"对CSS指定样式设置一个新值，如有此样式已存在则更新。","compatibility":"##### setProperty 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| name | string ([string.cssPropertyString](/uts/data-type.md#ide-string)) | 是 | - | - | CSS样式名称 |\n| value | any | 否 | - | - | 要设置的新CSS样式值 | \n","returnValue":"","tutorial":""},"getPropertyValue":{"name":"#### getPropertyValue(property: string \\| string.cssPropertyString): any \\| null @getpropertyvalue","description":"获取CSS指定的样式值，如果指定的样式不存在则返回null。","compatibility":"##### getPropertyValue 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| property | string ([string.cssPropertyString](/uts/data-type.md#ide-string)) | 是 | - | - | 要获取的CSS样式名称 | \n","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| any | 否 |\n \n","tutorial":""},"removeProperty":{"name":"#### removeProperty(property: string \\| string.cssPropertyString): any \\| null @removeproperty","description":"删除CSS指定的样式值","compatibility":"##### removeProperty 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| property | string ([string.cssPropertyString](/uts/data-type.md#ide-string)) | 是 | - | - | 要删除的CSS样式名称 | \n","returnValue":"##### 返回值  \n\n| 类型 | 必备 |\n| :- | :- |\n| any | 否 |\n \n","tutorial":""}},"compatibility":"### CSSStyleDeclaration 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | 4.11 |"},"TakeSnapshotOptions":{"name":"## TakeSnapshotOptions","description":"组件截图的参数配置选项","extends":"","param":"\n### TakeSnapshotOptions 的属性值 @takesnapshotoptions-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 否 | \"file\" | - | 截图导出类型，目前仅支持 'file' 保存到临时文件目录 |\n| format | string | 否 | \"png\" | - | 截图文件格式，目前仅支持 'png' |\n","methods":{"success":{"name":"#### (res: TakeSnapshotSuccess) => void @success","description":"接口调用成功的回调函数","compatibility":"##### success 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| res | **TakeSnapshotSuccess** | 是 | - | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| tempFilePath | string | 是 | - | - | 截图保存的临时文件路径 | \n","returnValue":"","tutorial":""},"fail":{"name":"#### (res: TakeSnapshotFail) => void @fail","description":"接口调用失败的回调函数","compatibility":"##### fail 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| res | **TakeSnapshotFail** | 是 | - | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| errMsg | string | 是 | - | - | - | \n","returnValue":"","tutorial":""},"complete":{"name":"#### (res: any) => void @complete","description":"接口调用结束的回调函数（调用成功、失败都会执行）","compatibility":"##### complete 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| res | any | 是 | - | - | - | \n","returnValue":"","tutorial":""}},"compatibility":"### TakeSnapshotOptions 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"TakeSnapshotSuccessCallback":{"name":"## TakeSnapshotSuccessCallback","description":"","extends":"","param":"","compatibility":"### TakeSnapshotSuccessCallback 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"TakeSnapshotSuccess":{"name":"## TakeSnapshotSuccess","description":"","extends":"","param":"\n### TakeSnapshotSuccess 的属性值 @takesnapshotsuccess-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| tempFilePath | string | 是 | - | - | 截图保存的临时文件路径 |\n","compatibility":"### TakeSnapshotSuccess 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"TakeSnapshotFailCallback":{"name":"## TakeSnapshotFailCallback","description":"","extends":"","param":"","compatibility":"### TakeSnapshotFailCallback 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"TakeSnapshotFail":{"name":"## TakeSnapshotFail","description":"","extends":"","param":"\n### TakeSnapshotFail 的属性值 @takesnapshotfail-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| errMsg | string | 是 | - | - | - |\n","compatibility":"### TakeSnapshotFail 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"TakeSnapshotCompleteCallback":{"name":"## TakeSnapshotCompleteCallback","description":"","extends":"","param":"","compatibility":"### TakeSnapshotCompleteCallback 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"DOMRect":{"name":"## DOMRect","description":"一个 DOMRect 代表一个矩形。","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 否 | 0 | - | 矩形原点的x坐标 |\n| y | number | 否 | 0 | - | 矩形原点的y坐标 |\n| width | number | 否 | 0 | - | 矩形的宽 |\n| height | number | 否 | 0 | - | 矩形的高 |\n\n### DOMRect 的属性值 @domrect-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| width | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的宽 |\n| height | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的高 |\n| x | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形原点的x坐标 |\n| y | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形原点的y坐标 |\n| left | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的左坐标值 |\n| right | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的右坐标值 |\n| top | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的顶坐标值 |\n| bottom | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"3.9\",\"4.11\"]]}' /> | 矩形的底坐标值 |\n","compatibility":"### DOMRect 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.0 | 3.9 | 4.11 |"},"DrawableContext":{"name":"## DrawableContext","description":"","extends":"","param":"\n### DrawableContext 的属性值 @drawablecontext-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| font | string | 是 | 10px | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置字体大小 |\n| fillStyle | [string.ColorString](/uts/data-type.md#ide-string) | 是 | #000 (黑色) | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置填充颜色 |\n| lineCap | string | 是 | butt | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 指定如何绘制每一条线条末端的属性，可选值：`butt`线段末端以方形结束；`round`线段末端以圆形结束；`square`线段末端以方形结束，但是会增加一个一半宽度的矩形区域。 |\n| lineDashOffset | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置虚线偏移量 |\n| lineJoin | string | 是 | miter | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置 2 个长度不为 0 的线条相连部分如何连接在一起的属性，可选值：`bevel`斜角；`round`圆角；`miter`尖角。 |\n| lineWidth | number | 是 | 1px | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置线条的宽度 |\n| strokeStyle | [string.ColorString](/uts/data-type.md#ide-string) | 是 | #000 (黑色) | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置边框的颜色 |\n| textAlign | string | 是 | left | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"x\",\"3.9\",\"4.11\"]]}' /> | 设置文本的对齐方式，可取值：`left`左对齐；`center`居中对齐；`right`右对齐。 |\n","methods":{"beginPath":{"name":"#### beginPath(): void @beginpath","description":"创建一个新的空路径","compatibility":"##### beginPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"","returnValue":"","tutorial":""},"arc":{"name":"#### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean \\| null): void @arc","description":"绘制一段弧线","compatibility":"##### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆心的X轴坐标 |\n| y | number | 是 | - | - | 圆心的Y轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 否 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n","returnValue":"","tutorial":""},"moveTo":{"name":"#### moveTo(x: number, y: number): void @moveto","description":"将一个新的路径的起始点移动到 (x，y) 坐标","compatibility":"##### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n","returnValue":"","tutorial":""},"rect":{"name":"#### rect(x: number, y: number, width: number, height: number): void @rect","description":"创建一个矩形路径","compatibility":"##### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | - | 矩形宽度 |\n| height | number | 是 | - | - | 矩形高度 | \n","returnValue":"","tutorial":""},"lineTo":{"name":"#### lineTo(x: number, y: number): void @lineto","description":"将路径的最后一个点连接到 (x，y) 坐标","compatibility":"##### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n","returnValue":"","tutorial":""},"closePath":{"name":"#### closePath(): void @closepath","description":"闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。","compatibility":"##### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"","returnValue":"","tutorial":""},"stroke":{"name":"#### stroke(): void @stroke","description":"绘制当前或已经存在的路径的边框。","compatibility":"##### stroke 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"","returnValue":"","tutorial":""},"strokeRect":{"name":"#### strokeRect(x: number, y: number, width: number, height: number): void @strokerect","description":"绘制一个矩形框","compatibility":"##### strokeRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | - | 矩形宽度 |\n| height | number | 是 | - | - | 矩形高度 | \n","returnValue":"","tutorial":""},"strokeText":{"name":"#### strokeText(text: string, x: number, y: number): void @stroketext","description":"绘制空心字符","compatibility":"##### strokeText 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| text | string | 是 | - | - | 要绘制的字符 |\n| x | number | 是 | - | - | 字符开始绘制的X轴坐标 |\n| y | number | 是 | - | - | 字符开始绘制的Y轴坐标 | \n","returnValue":"","tutorial":""},"fill":{"name":"#### fill(fillRule?: string \\| null): void @fill","description":"填充当前或已存在的路径","compatibility":"##### fill 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| fillRule | string | 否 | nonzero | - | 填充规则。可取值：`nonzero`非零环绕规则；`evenodd`奇偶环绕规则。 | \n","returnValue":"","tutorial":""},"fillRect":{"name":"#### fillRect(x: number, y: number, width: number, height: number): void @fillrect","description":"绘制一个实心矩形","compatibility":"##### fillRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | - | 矩形宽度 |\n| height | number | 是 | - | - | 矩形高度 | \n","returnValue":"","tutorial":""},"fillText":{"name":"#### fillText(text: string, x: number, y: number): void @filltext","description":"绘制实心字符","compatibility":"##### fillText 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| text | string | 是 | - | - | 要绘制的字符 |\n| x | number | 是 | - | - | 字符开始绘制的X轴坐标 |\n| y | number | 是 | - | - | 字符开始绘制的Y轴坐标 | \n","returnValue":"","tutorial":""},"reset":{"name":"#### reset(): void @reset","description":"清空绘制数据","compatibility":"##### reset 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"","returnValue":"","tutorial":""},"update":{"name":"#### update(): void @update","description":"将所有绘制内容更新到画布上","compatibility":"##### update 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"","returnValue":"","tutorial":""},"setLineDash":{"name":"#### setLineDash(segments: Array\\<number>): void @setlinedash","description":"设置虚线样式","compatibility":"##### setLineDash 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| segments | number[\\] | 是 | - | - | 一组描述交替绘制线段和间距长度的数字。 | \n","returnValue":"","tutorial":""},"bezierCurveTo":{"name":"#### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto","description":"创建三次方贝塞尔曲线路径","compatibility":"##### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n","returnValue":"","tutorial":""}},"compatibility":"### DrawableContext 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| x | 3.9 | 4.11 |","example":"### 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/element-draw/element-draw.uvue) \n >\n> 该 API 不支持 Web，请运行 hello uni-app x 到 App 平台体验 \n```uvue\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view class=\"page-scroll-view\">\n  <!-- #endif -->\n    <view>\n      <view class=\"drawing\" id=\"draw-text-view\"></view>\n      <view class=\"drawing\" id=\"draw-line-view\"></view>\n      <view class=\"drawing\" id=\"draw-circle-view\"></view>\n      <view class=\"drawing\" id=\"draw-dash-line\"></view>\n      <view class=\"drawing\" id=\"draw-house\"></view>\n      <view class=\"drawing\" id=\"draw-style\"></view>\n      <view class=\"drawing\" id=\"draw-odd\"></view>\n      <view class=\"drawing\" id=\"draw-arcto\"></view>\n    </view>\n  <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n\n<script>\n  var y = 160\n  export default {\n    data() {\n      return {\n        texts: [\n          'HBuilderX，轻巧、极速，极客编辑器',\n          'uni-app x，终极跨平台方案',\n          'uniCloud，js serverless云服务',\n          'uts，大一统语言',\n          'uniMPSdk，让你的App具备小程序能力',\n          'uni-admin，开源、现成的全端管理后台',\n          'uni-id，开源、全端的账户中心',\n          'uni-pay，开源、云端一体、全平台的支付',\n          'uni-ai，聚合ai能力',\n          'uni-cms，开源、云端一体、全平台的内容管理平台',\n          'uni-im，开源、云端一体、全平台的im即时消息',\n          'uni统计，开源、完善、全平台的统计报表',\n          '......'\n        ] as string[]\n      }\n    },\n    onShow() {\n    },\n\n    onReady() {\n      this.drawText()\n      this.drawLines()\n      this.drawCircles()\n      this.drawStar()\n      this.drawhouse()\n      this.drawPoint()\n      this.drawRect()\n      this.drawArcTo()\n    },\n    onUnload() {\n      y = 160\n    },\n    methods: {\n      drawText() {\n        let element = uni.getElementById('draw-text-view')!\n        let ctx = element.getDrawableContext()!\n        let width = element.getBoundingClientRect().width\n        ctx.reset()\n        ctx.font = \"15px Arial\"\n        ctx.textAlign = \"center\"\n        for (var i = 0; i < this.texts.length; i++) {\n          let value = this.texts[i]\n          if (i % 2 == 0) {\n            ctx.fillText(value, width / 2, (20 * (i + 1)))\n          } else {\n            ctx.lineWidth = 0.5\n            ctx.strokeText(value, width / 2, (20 * (i + 1)))\n          }\n        }\n        ctx.update()\n      },\n      drawLines() {\n        let ctx = uni.getElementById('draw-line-view')!.getDrawableContext()!\n        ctx.reset()\n        ctx.lineWidth = 10;\n\n        [\"round\", \"bevel\", \"miter\"].forEach((join, i) => {\n          ctx.lineJoin = join;\n          ctx.beginPath();\n          ctx.moveTo(5, 10 + i * 40);\n          ctx.lineTo(50, 50 + i * 40);\n          ctx.lineTo(90, 10 + i * 40);\n          ctx.lineTo(130, 50 + i * 40);\n          ctx.lineTo(170, 10 + i * 40);\n          ctx.stroke();\n        });\n        ctx.lineWidth = 1\n        var space = 170\n        ctx.strokeStyle = '#09f';\n        ctx.beginPath();\n        ctx.moveTo(10 + space, 10);\n        ctx.lineTo(140 + space, 10);\n        ctx.moveTo(10 + space, 140);\n        ctx.lineTo(140 + space, 140);\n        ctx.stroke();\n        // Draw lines\n        ctx.strokeStyle = 'black';\n        ['butt', 'round', 'square'].forEach((lineCap, i) => {\n          ctx.lineWidth = 15;\n          ctx.lineCap = lineCap;\n          ctx.beginPath();\n          ctx.moveTo(25 + space + i * 50, 10);\n          ctx.lineTo(25 + space + i * 50, 140);\n          ctx.stroke();\n        });\n        ctx.lineWidth = 1;\n        this.drawDashedLine([], ctx);\n        this.drawDashedLine([2, 2], ctx);\n        this.drawDashedLine([10, 10], ctx);\n        this.drawDashedLine([20, 5], ctx);\n        this.drawDashedLine([15, 3, 3, 3], ctx);\n        this.drawDashedLine([20, 3, 3, 3, 3, 3, 3, 3], ctx);\n        ctx.lineDashOffset = 18;\n        this.drawDashedLine([12, 3, 3], ctx);\n        ctx.lineDashOffset = 0\n        ctx.setLineDash([0])\n        ctx.update()\n      },\n      drawDashedLine(pattern : Array<number>, ctx : DrawableContext) {\n        ctx.beginPath();\n        ctx.setLineDash(pattern);\n        ctx.moveTo(0, y);\n        ctx.lineTo(300, y);\n        ctx.stroke();\n        y += 15;\n      },\n      drawCircles() {\n        let ctx = uni.getElementById('draw-circle-view')!.getDrawableContext()!\n        ctx.reset()\n        // Draw shapes\n        for (var i = 0; i < 4; i++) {\n          for (var j = 0; j < 3; j++) {\n            ctx.beginPath();\n            var x = 25 + j * 50;               // x coordinate\n            var y = 25 + i * 50;               // y coordinate\n            var radius = 20;                    // Arc radius\n            var startAngle = 0;                     // Starting point on circle\n            var endAngle = Math.PI + (Math.PI * j) / 2; // End point on circle\n            var clockwise = i % 2 == 0 ? false : true; // clockwise or anticlockwise\n\n            ctx.arc(x, y, radius, startAngle, endAngle, clockwise);\n\n            if (i > 1) {\n              ctx.fill();\n            } else {\n              ctx.stroke();\n            }\n          }\n        }\n        ctx.update()\n      },\n\n      drawStar() {\n        let ctx = uni.getElementById('draw-dash-line')!.getDrawableContext()!\n        ctx.reset()\n        ctx.beginPath();\n        var horn = 5; // 画5个角\n        var angle = 360 / horn; // 五个角的度数\n        // 两个圆的半径\n        var R = 50;\n        var r = 20;\n        // 坐标\n        var x = 100;\n        var y = 100;\n        for (var i = 0; i < horn; i++) {\n          // 角度转弧度：角度/180*Math.PI\n          // 外圆顶点坐标\n          ctx.lineTo(Math.cos((18 + i * angle) / 180.0 * Math.PI) * R + x, -Math.sin((18 + i * angle) / 180.0 * Math.PI) * R + y);\n          // 內圆顶点坐标\n          ctx.lineTo(Math.cos((54 + i * angle) / 180.0 * Math.PI) * r + x, -Math.sin((54 + i * angle) / 180.0 * Math.PI) * r + y);\n        }\n        // closePath：关闭路径，将路径的终点与起点相连\n        ctx.closePath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = '#E4EF00';\n        ctx.strokeStyle = \"red\";\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.lineWidth = 10;\n        ctx.beginPath()\n        ctx.moveTo(170, 100)\n        ctx.lineTo(255, 15)\n        ctx.lineTo(340, 100)\n        ctx.closePath()\n        ctx.fill()\n        ctx.strokeStyle = \"blue\"\n        ctx.stroke()\n        ctx.beginPath()\n        ctx.moveTo(170, 145)\n        ctx.lineTo(255, 45)\n        ctx.lineTo(340, 145)\n        ctx.closePath()\n        ctx.fill()\n        ctx.strokeStyle = \"gray\"\n        ctx.stroke()\n        // 未设置beginPath，导致上下表现一致，与前端一致\n        ctx.moveTo(170, 190)\n        ctx.lineTo(255, 90)\n        ctx.lineTo(340, 190)\n        ctx.closePath()\n        ctx.fillStyle = \"orange\"\n        ctx.fill()\n        ctx.strokeStyle = \"khaki\"\n        ctx.stroke()\n        ctx.update()\n      },\n      hex(num : number) : string {\n        if (num == 0) {\n          return \"00\"\n        }\n        let hexChars = \"0123456789ABCDEF\";\n        let result = \"\";\n        while (num > 0) {\n          let remainder = Math.floor(num) % 16;\n          result = hexChars[remainder] + result;\n          num = Math.floor(Math.floor(num) / 16);\n        }\n        if (result.length == 1) {\n          return \"0\" + result\n        }\n        return result\n      },\n      drawhouse() {\n        let ctx = uni.getElementById('draw-house')!.getDrawableContext()!\n        ctx.reset()\n        ctx.lineWidth = 10;\n\n        // Wall\n        ctx.strokeRect(75, 140, 150, 110);\n\n        // Door\n        ctx.fillRect(130, 190, 40, 60);\n\n        // Roof\n        ctx.beginPath();\n        ctx.moveTo(50, 140);\n        ctx.lineTo(150, 60);\n        ctx.lineTo(250, 140);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.update()\n      },\n      drawPoint() {\n        let ctx = uni.getElementById('draw-style')!.getDrawableContext()!\n        ctx.reset()\n        for (let i = 0; i < 6; i++) {\n          for (let j = 0; j < 6; j++) {\n            ctx.strokeStyle = `rgb(0,${Math.floor(255 - 42.5 * i)},${Math.floor(255 - 42.5 * j)})`;\n            ctx.beginPath();\n            ctx.arc(12.5 + j * 25, 12.5 + i * 25, 10, 0, Math.PI * 2, true);\n            ctx.stroke();\n          }\n        }\n        for (let i = 0; i < 6; i++) {\n          for (let j = 0; j < 6; j++) {\n            ctx.fillStyle = `rgb(${Math.floor(255 - 42.5 * i)},${Math.floor(255 - 42.5 * j)},0)`;\n            ctx.fillRect(180 + j * 25, i * 25, 25, 25);\n          }\n        }\n        ctx.update()\n      },\n      drawRect() {\n        let ctx = uni.getElementById('draw-odd')!.getDrawableContext()!\n        ctx.reset()\n        // Create path\n        ctx.moveTo(30, 90);\n        ctx.lineTo(110, 20);\n        ctx.lineTo(240, 130);\n        ctx.lineTo(60, 130);\n        ctx.lineTo(190, 20);\n        ctx.lineTo(270, 90);\n        ctx.closePath();\n\n        // Fill path\n        ctx.fillStyle = \"green\";\n        ctx.fill(\"evenodd\");\n        ctx.update()\n\n      },\n      drawArcTo() {\n        let ctx = uni.getElementById('draw-arcto')!.getDrawableContext()!\n        ctx.reset()\n        ctx.beginPath();\n        ctx.moveTo(50, 20);\n        ctx.bezierCurveTo(230, 30, 150, 60, 50, 100);\n        ctx.stroke();\n\n        ctx.fillStyle = \"blue\";\n        // start point\n        ctx.fillRect(50, 20, 10, 10);\n        // end point\n        ctx.fillRect(50, 100, 10, 10);\n\n        ctx.fillStyle = \"red\";\n        // control point one\n        ctx.fillRect(230, 30, 10, 10);\n        // control point two\n        ctx.fillRect(150, 70, 10, 10);\n        ctx.update()\n      }\n    }\n  }\n</script>\n\n<style>\n  .drawing {\n    height: 275px;\n    background-color: lightgray;\n    margin-bottom: 15px;\n  }\n</style>\n\n```"},"UniCallbackWrapper":{"name":"## UniCallbackWrapper","description":"事件回调封装类，用于注销监听函数的形参","extends":"","param":"","compatibility":"### UniCallbackWrapper 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniMouseEvent":{"name":"## UniMouseEvent","description":"","extends":"```mermaid\ngraph LR\n  \nUniPointerEvent -- Extends --> UniEvent\n  style UniEvent color:#42b983\n  click UniEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unievent\"\n```","param":"\n### UniMouseEvent 的属性值 @unimouseevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| clientX | number | 是 | - | - | 相对于页面可显示区域左边的距离 |\n| clientY | number | 是 | - | - | 相对于页面可显示区域顶部的距离 |\n| x | number | 是 | - | - | 相对于页面可显示区域左边的距离，同`clientX` |\n| y | number | 是 | - | - | 相对于页面可显示区域顶部的距离，同`clientY` |\n| pageX | number | 是 | - | - |   相对于文档左边的距离 |\n| pageY | number | 是 | - | - | 相对于文档顶部的距离 |\n| screenX | number | 是 | - | - | 相对于屏幕左边距离 |\n| screenY | number | 是 | - | - | 相对于屏幕顶部的距离 |\n","compatibility":"### UniMouseEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniCustomEvent":{"name":"## UniCustomEvent","description":"","extends":"```mermaid\ngraph LR\n  \nUniCustomEvent -- Extends --> UniEvent\n  style UniEvent color:#42b983\n  click UniEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unievent\"\n```","param":"\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | - |\n| detail | T | 是 | - | - | - |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | - |\n| options | any | 是 | - | - | - |\n\n### UniCustomEvent 的属性值 @unicustomevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| detail | T | 是 | - | - | - |\n","compatibility":"### UniCustomEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniTouchEvent":{"name":"## UniTouchEvent","description":"","extends":"```mermaid\ngraph LR\n  \nUniTouchEvent -- Extends --> UniEvent\n  style UniEvent color:#42b983\n  click UniEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unievent\"\n```","param":"\n### UniTouchEvent 的属性值 @unitouchevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| touches | Array\\<**UniTouch**\\> | 是 | - | - | 当前停留在屏幕中的触摸点信息的数组 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| clientX | number | 是 | - | - | 相对于页面可显示区域左边的距离 |\n@| clientY | number | 是 | - | - | 相对于页面可显示区域顶部的距离 |\n@| identifier | number | 是 | - | - | 触摸点的标识符。这个值在这根手指所引发的所有事件中保持一致，直到手指抬起。 |\n@| pageX | number | 是 | - | - | 相对于文档左边的距离 |\n@| pageY | number | 是 | - | - | 相对于文档顶部的距离 |\n@| screenX | number | 是 | - | - | 相对于屏幕左边距离 |\n@| screenY | number | 是 | - | - | 相对于屏幕顶部的距离 |\n@| force | number | 否 | - | - | 返回当前触摸点按下的压力大小 |\n| changedTouches | Array\\<**UniTouch**\\> | 是 | - | - | 当前变化的触摸点信息的数组 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| clientX | number | 是 | - | - | 相对于页面可显示区域左边的距离 |\n@| clientY | number | 是 | - | - | 相对于页面可显示区域顶部的距离 |\n@| identifier | number | 是 | - | - | 触摸点的标识符。这个值在这根手指所引发的所有事件中保持一致，直到手指抬起。 |\n@| pageX | number | 是 | - | - | 相对于文档左边的距离 |\n@| pageY | number | 是 | - | - | 相对于文档顶部的距离 |\n@| screenX | number | 是 | - | - | 相对于屏幕左边距离 |\n@| screenY | number | 是 | - | - | 相对于屏幕顶部的距离 |\n@| force | number | 否 | - | - | 返回当前触摸点按下的压力大小 |\n","compatibility":"### UniTouchEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniTouch":{"name":"## UniTouch","description":"","extends":"","param":"\n### UniTouch 的属性值 @unitouch-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| clientX | number | 是 | - | - | 相对于页面可显示区域左边的距离 |\n| clientY | number | 是 | - | - | 相对于页面可显示区域顶部的距离 |\n| identifier | number | 是 | - | - | 触摸点的标识符。这个值在这根手指所引发的所有事件中保持一致，直到手指抬起。 |\n| pageX | number | 是 | - | - | 相对于文档左边的距离 |\n| pageY | number | 是 | - | - | 相对于文档顶部的距离 |\n| screenX | number | 是 | - | - | 相对于屏幕左边距离 |\n| screenY | number | 是 | - | - | 相对于屏幕顶部的距离 |\n| force | number | 否 | - | - | 返回当前触摸点按下的压力大小 |\n","compatibility":"### UniTouch 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniPointerEvent":{"name":"## UniPointerEvent","description":"","extends":"```mermaid\ngraph LR\n  \nUniPointerEvent -- Extends --> UniEvent\n  style UniEvent color:#42b983\n  click UniEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unievent\"\n```","param":"\n### UniPointerEvent 的属性值 @unipointerevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| clientX | number | 是 | - | - | 相对于页面可显示区域左边的距离 |\n| clientY | number | 是 | - | - | 相对于页面可显示区域顶部的距离 |\n| x | number | 是 | - | - | 相对于页面可显示区域左边的距离，同`clientX` |\n| y | number | 是 | - | - | 相对于页面可显示区域顶部的距离，同`clientY` |\n| pageX | number | 是 | - | - |   相对于文档左边的距离 |\n| pageY | number | 是 | - | - | 相对于文档顶部的距离 |\n| screenX | number | 是 | - | - | 相对于屏幕左边距离 |\n| screenY | number | 是 | - | - | 相对于屏幕顶部的距离 |\n","compatibility":"### UniPointerEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"UniObjectCustomEvent":{"name":"## UniObjectCustomEvent","description":"UniObject自定义事件","extends":"```mermaid\ngraph LR\n  \nUniObjectCustomEvent -- Extends --> UniCustomEvent\n  style UniCustomEvent color:#42b983\n  click UniCustomEvent \"https://doc.dcloud.net.cn/uni-app-x/component/common.html#unicustomevent\"\n```","param":"\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | - |\n| detail | any | 是 | - | - | - |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | - |\n\n### UniObjectCustomEvent 的属性值 @uniobjectcustomevent-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 是 | - | - | 事件类型 |\n| detail | UTSJSONObject | 是 | - | - | - |\n","compatibility":"### UniObjectCustomEvent 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | 4.25 | 4.25 |"},"UniResizeObserver":{"name":"## UniResizeObserver","description":"用于监视 UniElement 元素的大小变化。它可以观察一个或多个","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| callback | (entries: Array\\<**UniResizeObserverEntry**\\>) => void | 是 | - | - | 每当监视的元素调整大小时，回调该函数 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| borderBoxSize | Array\\<**UniBorderBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素带有边框box大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素含边框box的高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素含边框box的宽度 |\n@| contentBoxSize | Array\\<**UniContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的宽度 |\n@| devicePixelContentBoxSize | Array\\<**UniDevicePixelContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box设备像素大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素宽度 |\n@| contentRect | [DOMRect](/dom/domrect.md) | 是 | - | - | 只读属性 包含被监视元素大小的DOMRect |\n@| target | [UniElement](/dom/unielement.md) | 是 | - | - | 只读属性 被监视的 UniElement |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| callback | (entries: Array\\<**UniResizeObserverEntry**\\>, observer: [UniResizeObserver](/dom/uniresizeobserver.md)) => void | 是 | - | - | 每当监视的元素调整大小时，回调该函数 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| borderBoxSize | Array\\<**UniBorderBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素带有边框box大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素含边框box的高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素含边框box的宽度 |\n@| contentBoxSize | Array\\<**UniContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的宽度 |\n@| devicePixelContentBoxSize | Array\\<**UniDevicePixelContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box设备像素大小的数组。 |\n@@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@@| :- | :- | :- | :- |  :-: | :- |\n@@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素高度 |\n@@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素宽度 |\n@| contentRect | [DOMRect](/dom/domrect.md) | 是 | - | - | 只读属性 包含被监视元素大小的DOMRect |\n@| target | [UniElement](/dom/unielement.md) | 是 | - | - | 只读属性 被监视的 UniElement |\n","methods":{"disconnect":{"name":"#### disconnect(): void @disconnect","description":"取消所有的对 UniElement 目标的监视","compatibility":"##### disconnect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"","returnValue":"","tutorial":""},"observe":{"name":"#### observe(target: UniElement): void @observe","description":"监视指定 UniElement 大小变化","compatibility":"##### observe 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| target | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 被监视的 UniElement | \n","returnValue":"","tutorial":""},"unobserve":{"name":"#### unobserve(target: UniElement): void @unobserve","description":"结束对指定的 UniElement 的监视","compatibility":"##### unobserve 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| target | [UniElement](/dom/unielement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\"]]}' /> | 取消监视的 UniElement | \n","returnValue":"","tutorial":""}},"compatibility":"### UniResizeObserver 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.16 | 4.13 | 4.18 |","example":"### 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/resize-observer/resize-observer.uvue) \n ::: preview https://hellouniappx.dcloud.net.cn/web/#/pages/API/resize-observer/resize-observer\n>Template\n```vue\n<template>\r\n  <view>\r\n    <text>点击蓝色或红色方块区域会修改元素宽高</text>\r\n    <view v-show=\"boxDisplay\" style=\"align-items: center; justify-content: center; margin: 10px;\">\r\n      <view\r\n        style=\"width: 140px; height: 140px; background-color: blue; align-items: center; justify-content: center; padding: 5px;\"\r\n        id=\"outBox\" @click=\"outBoxClick\">\r\n        <view style=\"width: 80px; height: 80px; background-color: red; padding: 5px;\" id=\"innerBox\"\r\n          @click=\"innerBoxClick\"></view>\r\n      </view>\r\n    </view>\r\n    <button @click=\"revertBoxSize\">还原修改前元素宽高</button>\r\n    <button @click=\"toggleDisplay\">{{boxDisplay? '隐藏元素': '显示元素'}}</button>\n    <button @click='cancelListen'>停止监听</button>\r\n    <button @click='goOnListen'>恢复监听</button>\r\n    <view>\r\n      <text class=\"info-text\">蓝色方块元素:</text>\r\n      <view class=\"info-item\">\r\n        <text class=\"info-text\">{{outBoxSizeInfo}}</text>\r\n      </view>\r\n      <text class=\"info-text\" style=\"margin-top: 20px;\">红色方块元素:</text>\r\n      <view class=\"info-item\">\r\n        <text class=\"info-text\">{{innerBoxSizeInfo}}</text>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n\r\n\r\n<style>\r\n  .info-item {\r\n    flex-direction: row;\r\n  }\r\n\r\n  .info-text {\r\n    font-size: 14px;\r\n  }\r\n</style>\n\n```\n>Script\n```uts\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        outBoxSizeInfo: \"\",\r\n        innerBoxSizeInfo: \"\",\r\n        offset: 2,\r\n        boxDisplay: false,\r\n        outBoxElement: null as UniElement | null,\r\n        innerBoxElement: null as UniElement | null,\r\n        resizeObserver: null as UniResizeObserver | null,\r\n        outBoxElementOnResize: false\r\n      }\r\n    },\r\n    onBackPress() : boolean {\r\n      if (this.resizeObserver != null) {\r\n        this.resizeObserver!.disconnect()\r\n      }\r\n      return false\r\n    },\r\n    onReady() {\r\n      if (this.resizeObserver == null) {\r\n        this.resizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\r\n\r\n          entries.forEach(entry => {\r\n            if (entry.target == this.outBoxElement) {\r\n              this.outBoxSizeInfo = this.analysisResizeObserverEntry(entry)\r\n              this.outBoxElementOnResize = true\r\n            } else if (entry.target == this.innerBoxElement) {\r\n              this.innerBoxSizeInfo = this.analysisResizeObserverEntry(entry)\r\n            }\r\n          })\r\n        })\r\n        this.outBoxElement = uni.getElementById(\"outBox\")\r\n        if (this.outBoxElement != null) {\r\n          this.resizeObserver!.observe(this.outBoxElement!)\r\n        }\r\n        this.innerBoxElement = uni.getElementById(\"innerBox\")\r\n        if (this.innerBoxElement != null) {\r\n          this.resizeObserver!.observe(this.innerBoxElement!)\r\n        }\r\n        this.boxDisplay = true\r\n      }\r\n    },\r\n    methods: {\r\n      innerBoxClick() {\r\n        if (this.innerBoxElement != null) {\r\n          this.innerBoxElement!.style.setProperty(\"width\", this.innerBoxElement!.offsetWidth + this.offset + 'px')\r\n          this.innerBoxElement!.style.setProperty(\"height\", this.innerBoxElement!.offsetWidth + this.offset + 'px')\r\n        }\r\n      },\r\n      outBoxClick() {\r\n        if (this.outBoxElement != null) {\r\n          this.outBoxElement!.style.setProperty(\"width\", this.outBoxElement!.offsetWidth + this.offset + 'px')\r\n          this.outBoxElement!.style.setProperty(\"height\", this.outBoxElement!.offsetWidth + this.offset + 'px')\r\n        }\r\n      },\r\n      revertBoxSize() {\r\n        if (this.outBoxElement != null) {\r\n          this.outBoxElement!.style.setProperty(\"width\", \"140px\")\r\n          this.outBoxElement!.style.setProperty(\"height\", \"140px\")\r\n        }\r\n        if (this.innerBoxElement != null) {\r\n          this.innerBoxElement!.style.setProperty(\"width\", \"80px\")\r\n          this.innerBoxElement!.style.setProperty(\"height\", \"80px\")\r\n        }\r\n      },\r\n      //自动化测试专用\r\n      setOutBoxMarginLeft(value : string) {\r\n        if (this.outBoxElement != null) {\r\n          this.outBoxElementOnResize = false\r\n          this.outBoxElement!.style.setProperty(\"margin-left\", value)\r\n        }\r\n      },\r\n      toggleDisplay() {\r\n        this.boxDisplay = !this.boxDisplay\r\n      },\r\n      analysisResizeObserverEntry(entry : UniResizeObserverEntry) : string {\r\n        const contentBoxSize = entry.contentBoxSize[0]\r\n        const borderBoxSize = entry.borderBoxSize[0]\r\n        const devicePixelContentBoxSize = entry.devicePixelContentBoxSize[0]\r\n        return \"borderBoxSize: \\n{blockSize:\" + borderBoxSize.blockSize + \", inlineSize:\" + borderBoxSize.inlineSize + \"}\\n\" +\r\n          \"contentBoxSize: \\n{blockSize:\" + contentBoxSize.blockSize + \", inlineSize:\" + contentBoxSize.inlineSize + \"}\\n\" +\r\n          \"devicePixelContentBoxSize: \\n{blockSize:\" + devicePixelContentBoxSize.blockSize + \", inlineSize:\" + devicePixelContentBoxSize.inlineSize + \"}\\n\" +\r\n          \"contentRect: \\n{x:\" + entry.contentRect.x + \", y:\" + entry.contentRect.y + \", width:\" + entry.contentRect.width + \", height:\" + entry.contentRect.height + \"}\"\r\n      },\n      cancelListen(){\n        // this.resizeObserver?.unobserve()\n        this.resizeObserver!.unobserve(this.outBoxElement!)\n        this.resizeObserver!.unobserve(this.innerBoxElement!)\n      },\n      goOnListen(){\n        this.resizeObserver!.observe(this.outBoxElement!)\n        this.resizeObserver!.observe(this.innerBoxElement!)\n      }\r\n    }\r\n  }\r\n\n```\n:::"},"UniResizeObserverEntry":{"name":"## UniResizeObserverEntry","description":"UniResizeObserverEntry 接口是传递给 UniResizeObserver() 构造函数中的回调函数参数的对象","extends":"","param":"\n### UniResizeObserverEntry 的属性值 @uniresizeobserverentry-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| borderBoxSize | Array\\<**UniBorderBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素带有边框box大小的数组。 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| blockSize | number | 是 | - | - | 只读属性，被监视元素含边框box的高度 |\n@| inlineSize | number | 是 | - | - | 只读属性，被监视元素含边框box的宽度 |\n| contentBoxSize | Array\\<**UniContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box大小的数组。 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的高度 |\n@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的宽度 |\n| devicePixelContentBoxSize | Array\\<**UniDevicePixelContentBoxSize**\\> | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.16\",\"4.13\",\"4.18\"]]}' /> | 只读属性 包含被监视的元素内容box设备像素大小的数组。 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素高度 |\n@| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素宽度 |\n| contentRect | [DOMRect](/dom/domrect.md) | 是 | - | - | 只读属性 包含被监视元素大小的DOMRect |\n| target | [UniElement](/dom/unielement.md) | 是 | - | - | 只读属性 被监视的 UniElement |\n","compatibility":"### UniResizeObserverEntry 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.16 | 4.13 | 4.18 |"},"UniBorderBoxSize":{"name":"## UniBorderBoxSize","description":"被监视的元素带有边框box的大小","extends":"","param":"\n### UniBorderBoxSize 的属性值 @uniborderboxsize-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| blockSize | number | 是 | - | - | 只读属性，被监视元素含边框box的高度 |\n| inlineSize | number | 是 | - | - | 只读属性，被监视元素含边框box的宽度 |\n","compatibility":"### UniBorderBoxSize 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.16 | 4.13 | 4.18 |"},"UniContentBoxSize":{"name":"## UniContentBoxSize","description":"被监视的元素内容box的大小","extends":"","param":"\n### UniContentBoxSize 的属性值 @unicontentboxsize-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的高度 |\n| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的宽度 |\n","compatibility":"### UniContentBoxSize 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.16 | 4.13 | 4.18 |"},"UniDevicePixelContentBoxSize":{"name":"## UniDevicePixelContentBoxSize","description":"被监视的元素内容box的设备像素大小","extends":"","param":"\n### UniDevicePixelContentBoxSize 的属性值 @unidevicepixelcontentboxsize-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| blockSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素高度 |\n| inlineSize | number | 是 | - | - | 只读属性，被监视元素内容box的设备像素宽度 |\n","compatibility":"### UniDevicePixelContentBoxSize 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.16 | 4.13 | 4.18 |"},"UniCanvasElement":{"name":"## UniCanvasElement","description":"canvas元素对象","extends":"```mermaid\ngraph LR\n  \nUniCanvasElement -- Extends --> UniElement\n  style UniElement color:#42b983\n  click UniElement \"https://doc.dcloud.net.cn/uni-app-x/dom/unielement.html\"\n```","param":"\n### UniCanvasElement 的属性值 @unicanvaselement-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| width | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\",\"4.25\"]]}' /> | Canvas宽度 |\n| height | number | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\",\"4.25\"]]}' /> | Canvas高度 |\n","methods":{"getContext":{"name":"#### getContext(contentType: string): CanvasRenderingContext2D \\| null @getcontext","description":"返回 Canvas 的绘图上下文","compatibility":"##### getContext 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.21 | 4.25 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| contentType | string | 是 | - | - | - | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 | 必备 |\n| :- | :- | :- |\n| [CanvasRenderingContext2D](/api/canvasrenderingcontext2d.md) | canvas元素的绘图2D渲染上下文, 它用于绘制形状、文本、图像和其他对象 | 否 |\n \n","tutorial":""},"toBlob":{"name":"#### toBlob(callback: BlobCallback): void @toblob","description":"创造 Blob 对象","compatibility":"##### toBlob 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.26 | x | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| callback | BlobCallback | 是 | - | - | - | \n","returnValue":"","tutorial":""},"toBlob_1":{"name":"#### toBlob(callback: BlobCallback, type: string): void @toblob","description":"","compatibility":"##### toBlob 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| callback | BlobCallback | 是 | - | - | - |\n| type | string | 是 | - | - | - | \n","returnValue":"","tutorial":""},"toBlob_2":{"name":"#### toBlob(callback: BlobCallback, type: string, quality: number): void @toblob","description":"","compatibility":"##### toBlob 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| callback | BlobCallback | 是 | - | - | - |\n| type | string | 是 | - | - | - |\n| quality | number | 是 | - | - | - | \n","returnValue":"","tutorial":""},"toDataURL":{"name":"#### toDataURL(type?: string \\| null, encoderOptions?: any \\| null): string @todataurl","description":"返回一个包含图片展示的 data URI (app平台不支持webp格式)","compatibility":"##### toDataURL 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.26 | 4.25 | 4.25 | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| type | string | 否 | - | - | - |\n| encoderOptions | any | 否 | - | - | - | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| string |\n \n","tutorial":""}},"compatibility":"### UniCanvasElement 兼容性 \n | Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.21 | 4.25 | 4.25 | 4.25 |"},"CanvasRenderingContext2D":{"name":"## CanvasRenderingContext2D","description":"canvas元素的绘图2D渲染上下文, 它用于绘制形状、文本、图像和其他对象","extends":"","param":"\n### CanvasRenderingContext2D 的属性值 @canvasrenderingcontext2d-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| canvas | [UniCanvasElement](/dom/unicanvaselement.md) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 是对与给定上下文关联的HTMLCanvasElement对象的只读引用 |\n| direction | Union | 是 | \"inherit\" | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 描述当前文本方向 |\n| fillStyle | Union | 是 | #000 (黑色) | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置填充颜色 |\n| filter | string | 是 | none | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 提供模糊、灰度等过滤效果的属性。它类似于 CSS filter 属性，并且接受相同的函数 |\n| font | string | 是 | 10px | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置字体大小 |\n| fontStretch | Union | 是 | normal | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 指定绘制文本时字体如何被扩展或压缩。该属性对应于 CSS 中的 font-stretch 属性 |\n| globalAlpha | number | 是 | 1.0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 用来描述在 canvas 上绘图之前，设置图形和图片透明度的属性。数值的范围从 0.0（完全透明）到 1.0（完全不透明） |\n| globalCompositeOperation | Union | 是 | source-over | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 在绘制新形状时应用的合成操作的类型，其中 type 是用于标识要使用的合成或混合模式操作的字符串 |\n| imageSmoothingEnabled | boolean | 是 | true | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于设置是否对缩放后的图片进行平滑处理，true 表示进行平滑处理，false 表示不进行 |\n| imageSmoothingQuality | Union | 是 | \"low\" | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于设置图像平滑度,要使此属性生效，imageSmoothingEnabled 属性必须为 true |\n| letterSpacing | string | 是 | \"0px\" | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于指定绘制文本时字母之间的间距。这对应于 CSS 中的 letter-spacing 属性 |\n| lineCap | Union | 是 | butt | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 指定如何绘制每一条线条末端的属性，可选值：`butt`线段末端以方形结束；`round`线段末端以圆形结束；`square`线段末端以方形结束，但是会增加一个一半宽度的矩形区域。 |\n| lineDashOffset | number | 是 | 0.0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置虚线偏移量 |\n| lineJoin | Union | 是 | miter | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置 2 个长度不为 0 的线条相连部分如何连接在一起的属性，可选值：`bevel`斜角；`round`圆角；`miter`尖角。 |\n| lineWidth | number | 是 | 1.0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置线条的宽度, 零、负数、Infinity 和 NaN 值将被忽略 |\n| miterLimit | number | 是 | 10.0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置斜接面限制比例的属性。当获取属性值时，会返回当前的值。当给属性赋值时，0、负数、 Infinity 和 NaN 都会被忽略；除此之外都会被赋予一个新值。 |\n| shadowBlur | number | 是 | 0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于描述模糊效果程度,其中 0 表示没有模糊，数字越大表示模糊程度越高。这个值不对应于像素数量，并且不受当前变换矩阵的影响。负数、Infinity 和 NaN 将被忽略 |\n| shadowColor | string | 是 | fully-transparent black | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 描述阴影颜色,可以转换成 CSS \\<color> 值的DOMString 字符串。默认值是  |\n| shadowOffsetX | number | 是 | 0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 指定阴影在水平方向上的偏移距离。正值向右偏移，负值向左偏移。默认值为 0（无水平偏移）。Infinity 和 NaN 值将被忽略 |\n| shadowOffsetY | number | 是 | 0 | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 指定阴影在垂直方向上的偏移距离。正值向右偏移，负值向左偏移。默认值为 0（无水平偏移）。Infinity 和 NaN 值将被忽略 |\n| strokeStyle | Union | 是 | #000 (黑色) | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置边框的颜色 |\n| textAlign | Union | 是 | left | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 设置文本的对齐方式，可取值：`left`左对齐；`center`居中对齐；`right`右对齐。 |\n| textBaseline | Union | 是 | alphabetic | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 描述绘制文本时，当前文本基线的属性 |\n| textRendering | Union | 是 | auto | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于在渲染文本时向渲染引擎提供应该如何优化的相关信息 |\n| wordSpacing | string | 是 | 0px | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"x\",\"x\"]]}' /> | 用于指定绘制文本时单词之间的间距, 如果设置为无效或无法解析的值，则属性值将保持不变 |\n","methods":{"arc":{"name":"#### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc","description":"绘制一段弧线","compatibility":"##### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n","returnValue":"","tutorial":""},"arcTo":{"name":"#### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto","description":"根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径","compatibility":"##### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n","returnValue":"","tutorial":""},"beginPath":{"name":"#### beginPath(): void @beginpath","description":"开始创建一个路径。需要调用 fill 或者 stroke 才会使用路径进行填充或描边","compatibility":"##### beginPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"bezierCurveTo":{"name":"#### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto","description":"绘制三次贝赛尔曲线路径","compatibility":"##### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| cp1y | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| cp2x | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| cp2y | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| x | number | 是 | - | - | 结束点的 x 轴坐标 |\n| y | number | 是 | - | - | 结束点的 y 轴坐标 | \n","returnValue":"","tutorial":""},"clearRect":{"name":"#### clearRect(x: number, y: number, width: number, height: number): void @clearrect","description":"清除画布上在该矩形区域内的内容","compatibility":"##### clearRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形的宽度 |\n| height | number | 是 | - | - | 矩形的高度 | \n","returnValue":"","tutorial":""},"clip":{"name":"#### clip(): void @clip","description":"将当前创建的路径设置为当前剪切路径","compatibility":"##### clip 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"clip_1":{"name":"#### clip(path: Path2D): void @clip","description":"将当前创建的路径设置为当前剪切路径","compatibility":"##### clip 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | Path2D用来声明路径，用来在canvas中根据需要创建可以保留并重用的路径, 此路径会被CanvasRenderingContext2D对象使用 | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n","returnValue":"","tutorial":""},"clip_2":{"name":"#### clip(fillRule: String): void @clip","description":"将当前创建的路径设置为当前剪切路径","compatibility":"##### clip 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| fillRule | [String](#string-values) | 是 | - | - | - | \n\n##### String 的方法 @string-values \n\n##### at(index: number): T \\| undefined; @at\nTakes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array.\n###### at 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| index | number | 是 | - | - | - | \n\n###### 返回值  \n\n| 类型 |\n| :- |\n| Union |\n \n","returnValue":"","tutorial":""},"clip_3":{"name":"#### clip(path: Path2D, fillRule: String): void @clip","description":"将当前创建的路径设置为当前剪切路径","compatibility":"##### clip 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | Path2D用来声明路径，用来在canvas中根据需要创建可以保留并重用的路径, 此路径会被CanvasRenderingContext2D对象使用 |\n| fillRule | [String](#string-values) | 是 | - | - | - | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n\n##### String 的方法 @string-values \n\n##### at(index: number): T \\| undefined; @at\nTakes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array.\n###### at 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| index | number | 是 | - | - | - | \n\n###### 返回值  \n\n| 类型 |\n| :- |\n| Union |\n \n","returnValue":"","tutorial":""},"closePath":{"name":"#### closePath(): void @closepath","description":"关闭一个路径","compatibility":"##### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"createImageData":{"name":"#### createImageData(width: number, height: number): void @createimagedata","description":"创建一个新的、空白的、指定大小的 ImageData 对象。所有的像素在新对象中都是透明的黑色","compatibility":"##### createImageData 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| width | number | 是 | - | - | - |\n| height | number | 是 | - | - | - | \n","returnValue":"","tutorial":""},"createPattern":{"name":"#### createPattern(image: Image, repetition: string): CanvasPattern @createpattern","description":"对指定的图像创建模式的方法，可在指定的方向上重复元图像","compatibility":"##### createPattern 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| image | [UniImageElement](#uniimageelement-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 重复的图像源，支持代码包路径和本地临时路径 (本地路径) |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| src | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"-\",\"4.25\",\"4.25\",\"x\"]]}' /> | 图片url |\n| repetition | string | 是 | - | - | 如何重复图像 | \n\n##### UniImageElement 的方法 @uniimageelement-values \n\n##### () => void \\| null @onload\n图片加载完成事件\n###### onload 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| - | 4.25 | 4.25 | x |\n\n\n","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| CanvasPattern | 接口表示一个不透明对象，描述了一个基于图像、画布或视频的模板，该模板通过 CanvasRenderingContext2D.createPattern() 方法创建 |\n \n","tutorial":""},"createLinearGradient":{"name":"#### createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient @createlineargradient","description":"创建一个线性的渐变颜色。返回的CanvasGradient对象需要使用 CanvasGradient.addColorStop() 来指定渐变点，至少要两个","compatibility":"##### createLinearGradient 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x0 | number | 是 | - | - | 起点的 x 坐标 |\n| y0 | number | 是 | - | - | 起点的 y 坐标 |\n| x1 | number | 是 | - | - | 终点的 x 坐标 |\n| y1 | number | 是 | - | - | 终点的 y 坐标 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| [CanvasGradient](#canvasgradient-values) | 表示描述渐变的不透明对象。该接口通过 CanvasRenderingContext2D.createLinearGradient()、<br/>CanvasRenderingContext2D.createConicGradient()<br/>或 CanvasRenderingContext2D.createRadialGradient() 方法返回 |\n\n###### CanvasGradient 的方法 @canvasgradient-values \n\n###### addColorStop(stop: number, color: string): void @addcolorstop\n添加颜色的渐变点。小于最小 stop 的部分会按最小 stop 的 color 来渲染，大于最大 stop 的部分会按最大 stop 的 color 来渲染\n###### addColorStop 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| stop | number | 是 | - | - | 表示渐变中开始与结束之间的位置，范围 0-1 |\n| color | string | 是 | - | - | 渐变点的颜色 | \n\n \n","tutorial":""},"createRadialGradient":{"name":"#### createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r01: number): CanvasGradient @createradialgradient","description":"根据参数确定两个圆的坐标，绘制放射性渐变。注意App平台和Web平台绘制效果有差异","compatibility":"##### createRadialGradient 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x0 | number | 是 | - | - | 开始圆形的 x 轴坐标 |\n| y0 | number | 是 | - | - | 开始圆形的 y 轴坐标 |\n| r0 | number | 是 | - | - | 开始圆形的半径 |\n| x1 | number | 是 | - | - | 结束圆形的 x 轴坐标 |\n| y1 | number | 是 | - | - | 结束圆形的 y 轴坐标 |\n| r01 | number | 是 | - | - | 结束圆形的半径 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| [CanvasGradient](#canvasgradient-values) | 表示描述渐变的不透明对象。该接口通过 CanvasRenderingContext2D.createLinearGradient()、<br/>CanvasRenderingContext2D.createConicGradient()<br/>或 CanvasRenderingContext2D.createRadialGradient() 方法返回 |\n\n###### CanvasGradient 的方法 @canvasgradient-values \n\n###### addColorStop(stop: number, color: string): void @addcolorstop\n添加颜色的渐变点。小于最小 stop 的部分会按最小 stop 的 color 来渲染，大于最大 stop 的部分会按最大 stop 的 color 来渲染\n###### addColorStop 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| stop | number | 是 | - | - | 表示渐变中开始与结束之间的位置，范围 0-1 |\n| color | string | 是 | - | - | 渐变点的颜色 | \n\n \n","tutorial":""},"draw":{"name":"#### draw(): void @draw","description":"将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中, 该操作为可选非web标准，canvas组件会自动选择合适时机进行绘制","compatibility":"##### draw 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"drawImage":{"name":"#### drawImage(imageResource: Image, sx: number, sy: number): void @drawimage","description":"绘制图像到画布","compatibility":"##### drawImage 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| imageResource | [UniImageElement](#uniimageelement-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | 所要绘制的图片资源 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| src | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"-\",\"4.25\",\"4.25\",\"x\"]]}' /> | 图片url |\n| sx | number | 是 | - | - | 需要绘制到画布中的，imageResource的矩形（裁剪）选择框的左上角 x 坐标 |\n| sy | number | 是 | - | - | 需要绘制到画布中的，imageResource的矩形（裁剪）选择框的左上角 y 坐标 | \n\n##### UniImageElement 的方法 @uniimageelement-values \n\n##### () => void \\| null @onload\n图片加载完成事件\n###### onload 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| - | 4.25 | 4.25 | x |\n\n\n","returnValue":"","tutorial":""},"drawImage_1":{"name":"#### drawImage(imageResource: Image, sx: number, sy: number, sWidth: number, sHeight: number): void @drawimage","description":"","compatibility":"##### drawImage 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| imageResource | [UniImageElement](#uniimageelement-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | image元素对象 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| src | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"-\",\"4.25\",\"4.25\",\"x\"]]}' /> | 图片url |\n| sx | number | 是 | - | - | - |\n| sy | number | 是 | - | - | - |\n| sWidth | number | 是 | - | - | - |\n| sHeight | number | 是 | - | - | - | \n\n##### UniImageElement 的方法 @uniimageelement-values \n\n##### () => void \\| null @onload\n图片加载完成事件\n###### onload 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| - | 4.25 | 4.25 | x |\n\n\n","returnValue":"","tutorial":""},"drawImage_2":{"name":"#### drawImage(imageResource: Image, sx: number, sy: number, sWidth: number, sHeight: number, dx: number, dy: number, dWidth: number, dHeight: number): void @drawimage","description":"","compatibility":"##### drawImage 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| imageResource | [UniImageElement](#uniimageelement-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"4.0\",\"4.0\",\"4.11\",\"4.25\"]]}' /> | image元素对象 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| src | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"-\",\"4.25\",\"4.25\",\"x\"]]}' /> | 图片url |\n| sx | number | 是 | - | - | - |\n| sy | number | 是 | - | - | - |\n| sWidth | number | 是 | - | - | - |\n| sHeight | number | 是 | - | - | - |\n| dx | number | 是 | - | - | - |\n| dy | number | 是 | - | - | - |\n| dWidth | number | 是 | - | - | - |\n| dHeight | number | 是 | - | - | - | \n\n##### UniImageElement 的方法 @uniimageelement-values \n\n##### () => void \\| null @onload\n图片加载完成事件\n###### onload 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| - | 4.25 | 4.25 | x |\n\n\n","returnValue":"","tutorial":""},"ellipse":{"name":"#### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse","description":"添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束","compatibility":"##### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n","returnValue":"","tutorial":""},"fill":{"name":"#### fill(): void @fill","description":"对当前路径中的内容进行填充","compatibility":"##### fill 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"fill_1":{"name":"#### fill(fillRule: \"nonzero\" \\| \"evenodd\"): void @fill","description":"对当前路径中的内容进行填充","compatibility":"##### fill 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| fillRule | Union | 是 | - | - | 填充当前或已存在的路径的方法。采取非零环绕(nonzero)或者奇偶环绕(evenodd)规则 | \n","returnValue":"","tutorial":""},"fill_2":{"name":"#### fill(path: Path2D, fillRule: \"nonzero\" \\| \"evenodd\"): void @fill","description":"对指定路径中的内容进行填充","compatibility":"##### fill 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 填充路径 |\n| fillRule | Union | 是 | - | - | 填充当前或已存在的路径的方法。采取非零环绕(nonzero)或者奇偶环绕(evenodd)规则 | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n","returnValue":"","tutorial":""},"fillRect":{"name":"#### fillRect(x: number, y: number, width: number, height: number): void @fillrect","description":"填充一个矩形。用 setFillStyle 设置矩形的填充色，如果没设置默认是黑色","compatibility":"##### fillRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形的宽度 |\n| height | number | 是 | - | - | 矩形的高度 | \n","returnValue":"","tutorial":""},"fillText":{"name":"#### fillText(text: string, x: number, y: number, maxWidth: number): void @filltext","description":"在画布上绘制文本","compatibility":"##### fillText 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| text | string | 是 | - | - | 要渲染的文本字符串 |\n| x | number | 是 | - | - | 开始绘制文本的点的 X 轴坐标 |\n| y | number | 是 | - | - | 开始绘制文本的点的 X 轴坐标 |\n| maxWidth | number | 是 | - | - | 需要绘制的最大宽度 | \n","returnValue":"","tutorial":""},"getImageData":{"name":"#### getImageData(sx: number, sy: number, sw: number, sh: number): ImageData @getimagedata","description":"返回一个ImageData对象，用来描述 canvas 区域隐含的像素数据，这个区域通过矩形表示，起始点为*(sx, sy)、宽为sw、高为sh。","compatibility":"##### getImageData 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| sx | number | 是 | - | - | 将要被提取的图像数据矩形区域的左上角 x 坐标 |\n| sy | number | 是 | - | - | 将要被提取的图像数据矩形区域的左上角 y 坐标 |\n| sw | number | 是 | - | - | 将要被提取的图像数据矩形区域的宽度 |\n| sh | number | 是 | - | - | 将要被提取的图像数据矩形区域的高度 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| **ImageData** | 描述canvas元素的一个隐含像素数据的区域 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| data | [Uint8ClampedArray](/uts/buildin-object-api/uint8clampedarray.md) | 是 | - | - | - |\n@| width | number | 是 | - | - | - |\n@| height | number | 是 | - | - | - | \n","tutorial":""},"isContextLost":{"name":"#### isContextLost(): Boolean @iscontextlost","description":"返回一个Boolean 标记上下文是否已经丢失","compatibility":"##### isContextLost 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| Boolean |\n \n","tutorial":""},"isPointInPath":{"name":"#### isPointInPath(x: number, y: number): boolean @ispointinpath","description":"判断在当前路径中是否包含检测点","compatibility":"##### isPointInPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"isPointInPath_1":{"name":"#### isPointInPath(x: number, y: number, fillRule: String): boolean @ispointinpath","description":"判断在当前路径中是否包含检测点","compatibility":"##### isPointInPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 |\n| fillRule | [String](#string-values) | 是 | - | - | 用来决定点在路径内还是在路径外的算法 | \n\n##### String 的方法 @string-values \n\n##### at(index: number): T \\| undefined; @at\nTakes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array.\n###### at 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| index | number | 是 | - | - | - | \n\n###### 返回值  \n\n| 类型 |\n| :- |\n| Union |\n \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"isPointInPath_2":{"name":"#### isPointInPath(path: Path2D, x: number, y: number): boolean @ispointinpath","description":"判断在当前路径中是否包含检测点","compatibility":"##### isPointInPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | Path2D应用的路径 |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"isPointInPath_3":{"name":"#### isPointInPath(path: Path2D, x: number, y: number, fillRule: String): boolean @ispointinpath","description":"判断在当前路径中是否包含检测点","compatibility":"##### isPointInPath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | Path2D应用的路径 |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 |\n| fillRule | [String](#string-values) | 是 | - | - | 用来决定点在路径内还是在路径外的算法 | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n\n##### String 的方法 @string-values \n\n##### at(index: number): T \\| undefined; @at\nTakes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array.\n###### at 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| index | number | 是 | - | - | - | \n\n###### 返回值  \n\n| 类型 |\n| :- |\n| Union |\n \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"isPointInStroke":{"name":"#### isPointInStroke(x: number, y: number): boolean @ispointinstroke","description":"检测某点是否在路径的描边线","compatibility":"##### isPointInStroke 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"isPointInStroke_1":{"name":"#### isPointInStroke(path: Path2D, x: number, y: number): boolean @ispointinstroke","description":"检测某点是否在路径的描边线","compatibility":"##### isPointInStroke 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | Path2D应用的路径 |\n| x | number | 是 | - | - | 检测点的 X 坐标 |\n| y | number | 是 | - | - | 检测点的 Y 坐标 | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"getLineDash":{"name":"#### getLineDash(): Array\\<number> @getlinedash","description":"在填充线时使用虚线模式, 它使用一组值来指定描述模式的线和间隙的交替长度。注意App平台和Web平台绘制效果有差异","compatibility":"##### getLineDash 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| number[\\] |\n \n","tutorial":""},"lineTo":{"name":"#### lineTo(x: number, y: number): void @lineto","description":"增加一个新点，然后创建一条从上次指定点到目标点的线。用 stroke 方法来画线条","compatibility":"##### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 目标位置的 x 坐标 |\n| y | number | 是 | - | - | 目标位置的 y 坐标 | \n","returnValue":"","tutorial":""},"measureText":{"name":"#### measureText(text: string): TextMetrics @measuretext","description":"测量文本尺寸信息。目前仅返回文本宽度","compatibility":"##### measureText 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| text | string | 是 | - | - | 要渲测量的文本字符串 | \n","returnValue":"##### 返回值  \n\n| 类型 | 描述 |\n| :- | :- |\n| **TextMetrics** | 表示文本的尺寸，通过 CanvasRenderingContext2D.measureText() 方法创建 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| width | number | 是 | - | - | - | \n","tutorial":""},"moveTo":{"name":"#### moveTo(x: number, y: number): void @moveto","description":"把路径移动到画布中的指定点","compatibility":"##### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 目标位置的 x 坐标 |\n| y | number | 是 | - | - | 目标位置的 y 坐标 | \n","returnValue":"","tutorial":""},"putImageData":{"name":"#### putImageData(imageData: ImageData, x: number, y: number): boolean @putimagedata","description":"将数据从已有的 ImageData 对象绘制到位图的方法。如果提供了一个绘制过的矩形，则只绘制该矩形的像素。此方法不受画布转换矩阵的影响","compatibility":"##### putImageData 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| imageData | **ImageData** | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 包含像素值的数组对象 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| data | [Uint8ClampedArray](/uts/buildin-object-api/uint8clampedarray.md) | 是 | - | - | - |\n@| width | number | 是 | - | - | - |\n@| height | number | 是 | - | - | - |\n| x | number | 是 | - | - | 源图像数据在目标画布中的位置偏移量（x 轴方向的偏移量） |\n| y | number | 是 | - | - | 源图像数据在目标画布中的位置偏移量（y 轴方向的偏移量） | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"putImageData_1":{"name":"#### putImageData(imageData: ImageData, x: number, y: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): boolean @putimagedata","description":"将数据从已有的 ImageData 对象绘制到位图的方法。如果提供了一个绘制过的矩形，则只绘制该矩形的像素。此方法不受画布转换矩阵的影响","compatibility":"##### putImageData 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| imageData | **ImageData** | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> | 包含像素值的数组对象 |\n@| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n@| :- | :- | :- | :- |  :-: | :- |\n@| data | [Uint8ClampedArray](/uts/buildin-object-api/uint8clampedarray.md) | 是 | - | - | - |\n@| width | number | 是 | - | - | - |\n@| height | number | 是 | - | - | - |\n| x | number | 是 | - | - | 源图像数据在目标画布中的位置偏移量（x 轴方向的偏移量） |\n| y | number | 是 | - | - | 源图像数据在目标画布中的位置偏移量（y 轴方向的偏移量） |\n| dirtyX | number | 是 | - | - | 在源图像数据中，矩形区域左上角的位置。默认是整个图像数据的左上角（x 坐标） |\n| dirtyY | number | 是 | - | - | 在源图像数据中，矩形区域左上角的位置。默认是整个图像数据的左上角（y 坐标） |\n| dirtyWidth | number | 是 | - | - | 在源图像数据中，矩形区域的宽度。默认是图像数据的宽度） |\n| dirtyHeight | number | 是 | - | - | 在源图像数据中，矩形区域的高度。默认是图像数据的高度 | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"quadraticCurveTo":{"name":"#### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto","description":"创建二次贝塞尔曲线路径","compatibility":"##### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n","returnValue":"","tutorial":""},"rect":{"name":"#### rect(x: number, y: number, width: number, height: number): void @rect","description":"创建一个矩形路径","compatibility":"##### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n","returnValue":"","tutorial":""},"resetTransform":{"name":"#### resetTransform(): void @resettransform","description":"使用单位矩阵重新设置当前变换","compatibility":"##### resetTransform 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"restore":{"name":"#### restore(): void @restore","description":"恢复之前保存的绘图上下文","compatibility":"##### restore 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"rotate":{"name":"#### rotate(rotate: number): void @rotate","description":"以原点为中心顺时针旋转当前坐标轴","compatibility":"##### rotate 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| rotate | number | 是 | - | - | ，以弧度计 degrees * Math.PI/180；degrees 范围为 0-360 | \n","returnValue":"","tutorial":""},"roundRect":{"name":"#### roundRect(x: number, y: number, width: number, height: number, radii: any): boolean @roundrect","description":"在当前路径中添加一个圆角矩形","compatibility":"##### roundRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 包含像素值的数组对象 |\n| y | number | 是 | - | - | 矩形起点的 x 轴坐标，以像素为单位 |\n| width | number | 是 | - | - | 矩形起点的 y 轴坐标，以像素为单位 |\n| height | number | 是 | - | - | 矩形的宽度。正值向右，负值向左 |\n| radii | any | 是 | - | - | 矩形的高度。正值向下，负值向上 | \n","returnValue":"##### 返回值  \n\n| 类型 |\n| :- |\n| boolean |\n \n","tutorial":""},"save":{"name":"#### save(): void @save","description":"保存绘图上下文","compatibility":"##### save 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"scale":{"name":"#### scale(x: number, y: number): void @scale","description":"缩放变换","compatibility":"##### scale 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - |  |\n| y | number | 是 | - | - |  | \n","returnValue":"","tutorial":""},"setLineDash":{"name":"#### setLineDash(segments: Array\\<number>): void @setlinedash","description":"在填充线时使用虚线模式, 它使用一组值来指定描述模式的线和间隙的交替长度。","compatibility":"##### setLineDash 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| segments | number[\\] | 是 | - | - | \\<number>一组描述交替绘制线段和间距（坐标空间单位）长度的数字 | \n","returnValue":"","tutorial":""},"setTransform":{"name":"#### setTransform(scaleX: Number, skewY: Number, skewX: Number, scaleY: Number, translateX: Number, translateY: Number): void @settransform","description":"使用单位矩阵重新设置（覆盖）当前的变换并调用变换","compatibility":"##### setTransform 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| scaleX | Number | 是 | - | - | 水平缩放 |\n| skewY | Number | 是 | - | - | 垂直倾斜 |\n| skewX | Number | 是 | - | - | 水平倾斜 |\n| scaleY | Number | 是 | - | - | 垂直缩放 |\n| translateX | Number | 是 | - | - | 水平移动 |\n| translateY | Number | 是 | - | - | 垂直移动 | \n","returnValue":"","tutorial":""},"stroke":{"name":"#### stroke(): void @stroke","description":"画出当前路径的边框。默认颜色色为黑色","compatibility":"##### stroke 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"stroke_1":{"name":"#### stroke(path: Path2D): void @stroke","description":"画出指定路径的边框。默认颜色色为黑色","compatibility":"##### stroke 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| path | [Path2D](#path2d-values) | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"}],\"rows\":[[\"4.21\",\"4.25\",\"4.25\"]]}' /> |  | \n\n##### Path2D 的方法 @path2d-values \n\n##### closePath(): void @closepath\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。\n###### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n\n\n##### moveTo(x: number, y: number): void @moveto\n将一个新的路径的起始点移动到 (x，y) 坐标\n###### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n\n\n##### lineTo(x: number, y: number): void @lineto\n将路径的最后一个点连接到 (x，y) 坐标\n###### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n\n\n##### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto\n创建三次方贝塞尔曲线路径\n###### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto\n创建二次贝塞尔曲线路径\n###### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n\n\n##### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc\n绘制一段弧线\n###### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n\n\n##### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto\n根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径\n###### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n\n\n##### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse\n添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束\n###### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n\n\n##### rect(x: number, y: number, width: number, height: number): void @rect\n创建一个矩形路径\n###### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n\n","returnValue":"","tutorial":""},"strokeRect":{"name":"#### strokeRect(x: number, y: number, width: number, height: number): void @strokerect","description":"画一个矩形(非填充)","compatibility":"##### strokeRect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形的宽度 |\n| height | number | 是 | - | - | 矩形的高度 | \n","returnValue":"","tutorial":""},"strokeText":{"name":"#### strokeText(text: string, x: number, y: number, maxWidth: number): void @stroketext","description":"文本描边","compatibility":"##### strokeText 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| text | string | 是 | - | - | 要渲染的文本字符串 |\n| x | number | 是 | - | - | 开始绘制文本的点的 X 轴坐标 |\n| y | number | 是 | - | - | 开始绘制文本的点的 X 轴坐标 |\n| maxWidth | number | 是 | - | - | 需要绘制的最大宽度 | \n","returnValue":"","tutorial":""},"transform":{"name":"#### transform(scaleX: Number, skewY: number, skewX: number, scaleY: number, translateX: number, translateY: number): void @transform","description":"使用矩阵多次叠加当前变换，矩阵由方法的参数进行描述。可以缩放、旋转、移动和倾斜上下文","compatibility":"##### transform 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| scaleX | Number | 是 | - | - | 水平缩放 |\n| skewY | number | 是 | - | - | 垂直倾斜 |\n| skewX | number | 是 | - | - | 水平倾斜 |\n| scaleY | number | 是 | - | - | 垂直缩放 |\n| translateX | number | 是 | - | - | 水平移动 |\n| translateY | number | 是 | - | - | 垂直移动 | \n","returnValue":"","tutorial":""},"translate":{"name":"#### translate(translateX: number, translateY: number): void @translate","description":"当前网格添加平移变换","compatibility":"##### translate 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| translateX | number | 是 | - | - | 水平方向的移动距离 |\n| translateY | number | 是 | - | - | 垂直方向的移动距离 | \n","returnValue":"","tutorial":""}},"compatibility":"### CanvasRenderingContext2D 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"CanvasGradient":{"name":"## CanvasGradient","description":"表示描述渐变的不透明对象。该接口通过 CanvasRenderingContext2D.createLinearGradient()、<br/>CanvasRenderingContext2D.createConicGradient()<br/>或 CanvasRenderingContext2D.createRadialGradient() 方法返回","extends":"","param":"","methods":{"addColorStop":{"name":"#### addColorStop(stop: number, color: string): void @addcolorstop","description":"添加颜色的渐变点。小于最小 stop 的部分会按最小 stop 的 color 来渲染，大于最大 stop 的部分会按最大 stop 的 color 来渲染","compatibility":"##### addColorStop 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| stop | number | 是 | - | - | 表示渐变中开始与结束之间的位置，范围 0-1 |\n| color | string | 是 | - | - | 渐变点的颜色 | \n","returnValue":"","tutorial":""}},"compatibility":"### CanvasGradient 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"Path2D":{"name":"## Path2D","description":"Path2D用来声明路径，用来在canvas中根据需要创建可以保留并重用的路径, 此路径会被CanvasRenderingContext2D对象使用","extends":"","param":"","methods":{"closePath":{"name":"#### closePath(): void @closepath","description":"闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。","compatibility":"##### closePath 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"","returnValue":"","tutorial":""},"moveTo":{"name":"#### moveTo(x: number, y: number): void @moveto","description":"将一个新的路径的起始点移动到 (x，y) 坐标","compatibility":"##### moveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 点的X轴坐标 |\n| y | number | 是 | - | - | 点的Y轴坐标 | \n","returnValue":"","tutorial":""},"lineTo":{"name":"#### lineTo(x: number, y: number): void @lineto","description":"将路径的最后一个点连接到 (x，y) 坐标","compatibility":"##### lineTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 线终点的X轴坐标 |\n| y | number | 是 | - | - | 线终点的Y轴坐标 | \n","returnValue":"","tutorial":""},"bezierCurveTo":{"name":"#### bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void @beziercurveto","description":"创建三次方贝塞尔曲线路径","compatibility":"##### bezierCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cp1x | number | 是 | - | - | 第一个贝塞尔控制点的 x 坐标 |\n| cp1y | number | 是 | - | - | 第一个贝塞尔控制点的 y 坐标 |\n| cp2x | number | 是 | - | - | 第二个贝塞尔控制点的 x 坐标 |\n| cp2y | number | 是 | - | - | 第二个贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n","returnValue":"","tutorial":""},"quadraticCurveTo":{"name":"#### quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void @quadraticcurveto","description":"创建二次贝塞尔曲线路径","compatibility":"##### quadraticCurveTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| cpx | number | 是 | - | - | 贝塞尔控制点的 x 坐标 |\n| cpy | number | 是 | - | - | 贝塞尔控制点的 y 坐标 |\n| x | number | 是 | - | - | 结束点的 x 坐标 |\n| y | number | 是 | - | - | 结束点的 y 坐标 | \n","returnValue":"","tutorial":""},"arc":{"name":"#### arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @arc","description":"绘制一段弧线","compatibility":"##### arc 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 圆弧中心（圆心）的 x 轴坐标 |\n| y | number | 是 | - | - | 圆弧中心（圆心）的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 |\n| startAngle | number | 是 | - | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | - | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 | \n","returnValue":"","tutorial":""},"arcTo":{"name":"#### arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void @arcto","description":"根据控制点和半径绘制圆弧路径，使用当前的描点 (前一个 moveTo 或 lineTo 等函数的止点)。根据当前描点与给定的控制点 1 连接的直线，和控制点 1 与控制点 2 连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径","compatibility":"##### arcTo 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x1 | number | 是 | - | - | 第一个控制点的 x 轴坐标 |\n| y1 | number | 是 | - | - | 第一个控制点的 y 轴坐标 |\n| x2 | number | 是 | - | - | 第二个控制点的 x 轴坐标 |\n| y2 | number | 是 | - | - | 第二个控制点的 y 轴坐标 |\n| radius | number | 是 | - | - | 圆弧的半径 | \n","returnValue":"","tutorial":""},"ellipse":{"name":"#### ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: boolean): void @ellipse","description":"添加椭圆路径。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY，按照anticlockwise（默认顺时针）指定的方向，从 startAngle 开始绘制，到 endAngle 结束","compatibility":"##### ellipse 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | x | x |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | - |\n| y | number | 是 | - | - | - |\n| radiusX | number | 是 | - | - | - |\n| radiusY | number | 是 | - | - | - |\n| rotation | number | 是 | - | - | - |\n| startAngle | number | 是 | - | - | - |\n| endAngle | number | 是 | - | - | - |\n| anticlockwise | boolean | 是 | - | - | - | \n","returnValue":"","tutorial":""},"rect":{"name":"#### rect(x: number, y: number, width: number, height: number): void @rect","description":"创建一个矩形路径","compatibility":"##### rect 兼容性 \n| Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |\n","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| x | number | 是 | - | - | 矩形路径起点的 x 轴坐标 |\n| y | number | 是 | - | - | 矩形路径起点的 y 轴坐标 |\n| width | number | 是 | - | - | 矩形路径的宽度 |\n| height | number | 是 | - | - | 矩形路径的高度 | \n","returnValue":"","tutorial":""}},"compatibility":"### Path2D 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"UniImageElement":{"name":"## UniImageElement","description":"image元素对象","extends":"```mermaid\ngraph LR\n  \nUniImageElement -- Extends --> UniElement\n  style UniElement color:#42b983\n  click UniElement \"https://doc.dcloud.net.cn/uni-app-x/dom/unielement.html\"\n```","param":"\n### UniImageElement 的属性值 @uniimageelement-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| src | string | 是 | - | <CompatibilityTable table='{\"headers\":[{\"title\":\"Web\"},{\"title\":\"Android\"},{\"title\":\"iOS\"},{\"title\":\"iOS uni-app x UTS 插件\"}],\"rows\":[[\"-\",\"4.25\",\"4.25\",\"x\"]]}' /> | 图片url |\n","methods":{"onload":{"name":"#### () => void \\| null @onload","description":"图片加载完成事件","compatibility":"##### onload 兼容性 \n| Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| - | 4.25 | 4.25 | x |\n","param":"","returnValue":"","tutorial":""}},"compatibility":"### UniImageElement 兼容性 \n | Web | Android | iOS | iOS uni-app x UTS 插件 |\n| :- | :- | :- | :- |\n| 4.0 | 4.0 | 4.11 | 4.25 |"},"CanvasPattern":{"name":"## CanvasPattern","description":"接口表示一个不透明对象，描述了一个基于图像、画布或视频的模板，该模板通过 CanvasRenderingContext2D.createPattern() 方法创建","extends":"","param":"","compatibility":"### CanvasPattern 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"ImageData":{"name":"## ImageData","description":"描述canvas元素的一个隐含像素数据的区域","extends":"","param":"\n### ImageData 的属性值 @imagedata-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| data | [Uint8ClampedArray](/uts/buildin-object-api/uint8clampedarray.md) | 是 | - | - | - |\n| width | number | 是 | - | - | - |\n| height | number | 是 | - | - | - |\n","compatibility":"### ImageData 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"TextMetrics":{"name":"## TextMetrics","description":"表示文本的尺寸，通过 CanvasRenderingContext2D.measureText() 方法创建","extends":"","param":"\n### TextMetrics 的属性值 @textmetrics-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| width | number | 是 | - | - | - |\n","compatibility":"### TextMetrics 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| 4.21 | 4.25 | 4.25 |"},"UniError":{"name":"## UniError","description":"uni api统一错误信息对象  ","extends":"","param":"\n### 构造函数\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| message | string | 是 | - | - | 统一错误描述信息 |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| message | string | 是 | - | - | 统一错误描述信息 |\n| options | any | 是 | - | - | 源错误对象，原始错误对象应该包含在 options.cause 属性中 |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| errSubject | string | 是 | - | - | 统一错误主题（模块）名称 |\n| errCode | number | 是 | - | - | 统一错误码 |\n| errMsg | string | 是 | - | - | 统一错误描述信息 |\n\n### UniError 的属性值 @unierror-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| errSubject | string | 是 | - | - | 统一错误主题（模块）名称 |\n| errCode | number | 是 | - | - | 统一错误码 |\n| errMsg | string | 是 | - | - | 统一错误描述信息 |\n| data | any | 否 | - | - | 错误信息中包含的数据 |\n| cause | [Error](https://uniapp.dcloud.net.cn/tutorial/err-spec.html#unierror) | 否 | - | - | 源错误信息，可以包含多个错误，详见SourceError |\n| name | string | 是 | - | - | - |\n| message | string | 是 | - | - | - |\n","compatibility":"### UniError 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"Error":{"name":"## Error","description":"UTS错误信息对象","extends":"","param":"\n### 构造函数\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| message | string | 是 | - | - | - |\n\n### 构造函数\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| message | string | 是 | - | - | - |\n| options | any | 是 | - | - | - |\n\n### Error 的属性值 @error-values\n| 名称 | 类型 | 必备 | 默认值 | 兼容性 | 描述 |\n| :- | :- | :- | :- |  :-: | :- |\n| name | string | 是 | - | - | - |\n| message | string | 是 | - | - | - |\n| cause | [Error](https://uniapp.dcloud.net.cn/tutorial/err-spec.html#unierror) | 否 | - | - | - |\n","compatibility":"### Error 兼容性 \n | Web | Android | iOS |\n| :- | :- | :- |\n| - | - | - |"},"general-attribute":{"name":"组件公共属性","description":"","attribute":"| 名称 | 类型 | 描述 |\n| :- | :- | :- |\n| id | string(string.IDString) | 组件的唯一标识。需避免同页面中不同组件设置重复id；需避免使用uni-、uni.等前缀 |\n| style | string | 组件的内联样式，可以动态设置的内联样式 |\n| class | string(string.ClassString) | 组件的样式类，在对应的 css 中定义的样式类 |\n| ref | string | vue中组件的唯一标识，用来给子组件注册引用信息，[详见](https://doc.dcloud.net.cn/uni-app-x/vue/built-in.html#ref) |\n| data-* | any | 自定义属性，组件上触发的事件时，会发送给事件处理函数 |\n| android-* | any | App-Android平台专有属性，详见[App-Android平台专有属性](https://doc.dcloud.net.cn/uni-app-x/component/common.html#attribute-android)章节 |","compatibility":"|  | Web | Android | iOS |\n| :- | :- | :- | :- |\n| id | 4.0 | 3.9 | 4.11 |\n| style | 4.0 | 3.9 | 4.11 |\n| class | 4.0 | 3.9 | 4.11 |\n| ref | 4.0 | 3.9 | 4.11 |\n| data-* | 4.0 | 3.9 | 4.11 |\n| android-* | x | 3.9 | x |","example":"### 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/component/global-properties/global-properties.uvue) \n ::: preview https://hellouniappx.dcloud.net.cn/web/#/pages/component/global-properties/global-properties\n>Template\n```vue\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex: 1\">\n    <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap\">\n        <view\n          :id=\"generalId\"\n          :class=\"generalClass\"\n          :name=\"generalName\"\n          :title=\"generalTitle\"\n          :data-test=\"generalData\"\n          :style=\"generalStyle\"\n          ref=\"general-target\"\n        >\n          <text>id: {{ generalId }}</text>\n          <text>class: {{ generalClass }}</text>\n          <text>name: {{ generalName }}</text>\n          <text>title: {{ generalTitle }}</text>\n          <text>data-test: {{ generalData }}</text>\n          <text>style: {{ generalStyle }}</text>\n        </view>\n        <view\n          class=\"btn btn-style uni-common-mt\"\n          @click=\"validateGeneralAttributes\"\n        >\n          <text class=\"btn-inner\">{{ validateGeneralAttrText }}</text>\n        </view>\n        <view class=\"btn btn-ref uni-common-mt\" @click=\"changeHeight\">\n          <text class=\"btn-inner\">{{ changeHeightByRefText }}</text>\n        </view>\n        <view class=\"view-class\" :hover-class=\"hoverClass\" ref=\"view-target\">\n          <text class=\"text\">按下 50 ms 后背景变红</text>\n          <text class=\"text\">抬起 400 ms 后背景恢复</text>\n        </view>\n        <view\n          class=\"view-class\"\n          :hover-class=\"hoverClass\"\n          :hover-start-time=\"1000\"\n          :hover-stay-time=\"1000\"\n          ref=\"view-target\"\n        >\n          <text class=\"text\">按下 1000 ms 后背景变红</text>\n          <text class=\"text\">抬起 1000 ms 后背景恢复</text>\n        </view>\n      </view>\n    </view>\n    <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n\n\n\n<style>\n.btn {\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #409eff;\n  border-radius: 5px;\n}\n.btn-inner {\n  color: #fff;\n}\n.general-class {\n  margin-left: 40px;\n  padding: 10px;\n  width: 260px;\n  height: 160px;\n  background-color: antiquewhite;\n}\n.view-class {\n  margin: 20px 0 0 50px;\n  padding: 10px;\n  width: 240px;\n  height: 100px;\n  background-color: antiquewhite;\n}\n.view-class .text {\n  margin-top: 5px;\n  text-align: center;\n}\n.hover-class {\n  background-color: red;\n}\n</style>\n\n```\n>Script\n```uts\n\nexport default {\n  data() {\n    return {\n      title: 'global-properties',\n      generalId: 'general-id',\n      generalClass: 'general-class',\n      generalName: 'general-name',\n      generalTitle: 'general-title',\n      generalData: 'general-data',\n      generalStyle: 'background-color: aqua',\n      validateGeneralAttrText: '验证基础属性',\n      hoverClass: 'hover-class',\n      validateViewAttrText: '验证 view 属性',\n      changeHeightByRefText: '通过 ref 修改高度',\n    }\n  },\n  methods: {\n    validateGeneralAttributes() {\n      const generalTarget = this.$refs['general-target'] as UniElement\n      const generalId = generalTarget.getAttribute('id')\n      if (generalId != this.generalId) {\n        this.validateGeneralAttrText = '基础属性 id 验证失败'\n        return\n      }\n      // #ifdef APP\n      if (!generalTarget.classList.includes('general-class')) {\n      // #endif\n      // #ifdef WEB\n      if (!Array.from(generalTarget.classList).includes('general-class')) {\n      // #endif\n        this.validateGeneralAttrText = '基础属性 class 验证失败'\n        return\n      }\n      const generalName = generalTarget.getAttribute('name')\n      if (generalName != this.generalName) {\n        this.validateGeneralAttrText = '基础属性 name 验证失败'\n        return\n      }\n      const generalTitle = generalTarget.getAttribute('title')\n      if (generalTitle != this.generalTitle) {\n        this.validateGeneralAttrText = '基础属性 title 验证失败'\n        return\n      }\n      const generalData = generalTarget.getAttribute('data-test')\n      if (generalData != this.generalData) {\n        this.validateGeneralAttrText = '基础属性 data-test 验证失败'\n        return\n      }\n      this.validateGeneralAttrText = '基础属性验证成功'\n    },\n    changeHeight(){\n      const generalTarget = this.$refs['general-target'] as UniElement\n      this.changeHeightByRefText = '已通过 ref 修改高度'\n      generalTarget.style.setProperty('height', '200px')\n    }\n  },\n}\n\n```\n:::"},"general-event":{"name":"组件公共事件","description":"","attribute":"| 名称 | 类型 | 描述 |\n| :- | :- | :- |\n| @click | (event: [UniPointerEvent](/component/common.md#unipointerevent)) => void | 手指触摸后马上离开。与tap相同，（推荐使用tap事件代替），冒泡事件 |\n| @mousedown | (event: [UniMouseEvent](/component/common.md#unimouseevent)) => void | 鼠标在元素上点击后触发 |\n| @mousemove | (event: [UniMouseEvent](/component/common.md#unimouseevent)) => void | 鼠标在元素上移动时触发 |\n| @mouseup | (event: [UniMouseEvent](/component/common.md#unimouseevent)) => void | 鼠标主按钮在元素上松开时触发 |\n| @touchstart | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 手指触摸动作开始，冒泡事件，event.type 值为 touchstart |\n| @touchmove | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 手指触摸后移动，冒泡事件，event.type 值为 touchmove |\n| @touchcancel | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 手指触摸动作被打断，如来电提醒，弹窗，冒泡事件，event.type 值为 touchcancel |\n| @touchend | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 手指触摸动作结束，冒泡事件，event.type 值为 touchend |\n| @tap | (event: [UniPointerEvent](/component/common.md#unipointerevent)) => void | 手指触摸后马上离开，冒泡事件 |\n| @longpress | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 如果一个组件被绑定了 longpress 事件，那么当用户手指触摸后，超过350ms再离开会触发，冒泡事件 |\n| @longtap | (event: [UniTouchEvent](/component/common.md#unitouchevent)) => void | 手指触摸后，超过350ms再离开（推荐使用 longpress 事件代替） |\n| @transitionend | (event: [UniEvent](/component/common.md#unievent)) => void | transition 效果结束时触发 |","compatibility":"|  | Web | Android | iOS |\n| :- | :- | :- | :- |\n| @click | 4.0 | 3.9 | 4.11 |\n| @mousedown | 4.0 | x | x |\n| @mousemove | 4.0 | x | x |\n| @mouseup | 4.0 | x | x |\n| @touchstart | 4.0 | 3.9 | 4.11 |\n| @touchmove | 4.0 | 3.9 | 4.11 |\n| @touchcancel | 4.0 | 3.9 | 4.11 |\n| @touchend | 4.0 | 3.9 | 4.11 |\n| @tap | 4.0 | 3.9 | 4.11 |\n| @longpress | 4.0 | 3.9 | 4.11 |\n| @longtap | 4.0 | 3.9 | 4.11 |\n| @transitionend | 4.0 | 3.93 | 4.11 |","example":"### 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/component/global-properties/global-properties.uvue) \n ::: preview https://hellouniappx.dcloud.net.cn/web/#/pages/component/global-properties/global-properties\n>Template\n```vue\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex: 1\">\n    <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap\">\n        <view\n          :id=\"generalId\"\n          :class=\"generalClass\"\n          :name=\"generalName\"\n          :title=\"generalTitle\"\n          :data-test=\"generalData\"\n          :style=\"generalStyle\"\n          ref=\"general-target\"\n        >\n          <text>id: {{ generalId }}</text>\n          <text>class: {{ generalClass }}</text>\n          <text>name: {{ generalName }}</text>\n          <text>title: {{ generalTitle }}</text>\n          <text>data-test: {{ generalData }}</text>\n          <text>style: {{ generalStyle }}</text>\n        </view>\n        <view\n          class=\"btn btn-style uni-common-mt\"\n          @click=\"validateGeneralAttributes\"\n        >\n          <text class=\"btn-inner\">{{ validateGeneralAttrText }}</text>\n        </view>\n        <view class=\"btn btn-ref uni-common-mt\" @click=\"changeHeight\">\n          <text class=\"btn-inner\">{{ changeHeightByRefText }}</text>\n        </view>\n        <view class=\"view-class\" :hover-class=\"hoverClass\" ref=\"view-target\">\n          <text class=\"text\">按下 50 ms 后背景变红</text>\n          <text class=\"text\">抬起 400 ms 后背景恢复</text>\n        </view>\n        <view\n          class=\"view-class\"\n          :hover-class=\"hoverClass\"\n          :hover-start-time=\"1000\"\n          :hover-stay-time=\"1000\"\n          ref=\"view-target\"\n        >\n          <text class=\"text\">按下 1000 ms 后背景变红</text>\n          <text class=\"text\">抬起 1000 ms 后背景恢复</text>\n        </view>\n      </view>\n    </view>\n    <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n\n\n\n<style>\n.btn {\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #409eff;\n  border-radius: 5px;\n}\n.btn-inner {\n  color: #fff;\n}\n.general-class {\n  margin-left: 40px;\n  padding: 10px;\n  width: 260px;\n  height: 160px;\n  background-color: antiquewhite;\n}\n.view-class {\n  margin: 20px 0 0 50px;\n  padding: 10px;\n  width: 240px;\n  height: 100px;\n  background-color: antiquewhite;\n}\n.view-class .text {\n  margin-top: 5px;\n  text-align: center;\n}\n.hover-class {\n  background-color: red;\n}\n</style>\n\n```\n>Script\n```uts\n\nexport default {\n  data() {\n    return {\n      title: 'global-properties',\n      generalId: 'general-id',\n      generalClass: 'general-class',\n      generalName: 'general-name',\n      generalTitle: 'general-title',\n      generalData: 'general-data',\n      generalStyle: 'background-color: aqua',\n      validateGeneralAttrText: '验证基础属性',\n      hoverClass: 'hover-class',\n      validateViewAttrText: '验证 view 属性',\n      changeHeightByRefText: '通过 ref 修改高度',\n    }\n  },\n  methods: {\n    validateGeneralAttributes() {\n      const generalTarget = this.$refs['general-target'] as UniElement\n      const generalId = generalTarget.getAttribute('id')\n      if (generalId != this.generalId) {\n        this.validateGeneralAttrText = '基础属性 id 验证失败'\n        return\n      }\n      // #ifdef APP\n      if (!generalTarget.classList.includes('general-class')) {\n      // #endif\n      // #ifdef WEB\n      if (!Array.from(generalTarget.classList).includes('general-class')) {\n      // #endif\n        this.validateGeneralAttrText = '基础属性 class 验证失败'\n        return\n      }\n      const generalName = generalTarget.getAttribute('name')\n      if (generalName != this.generalName) {\n        this.validateGeneralAttrText = '基础属性 name 验证失败'\n        return\n      }\n      const generalTitle = generalTarget.getAttribute('title')\n      if (generalTitle != this.generalTitle) {\n        this.validateGeneralAttrText = '基础属性 title 验证失败'\n        return\n      }\n      const generalData = generalTarget.getAttribute('data-test')\n      if (generalData != this.generalData) {\n        this.validateGeneralAttrText = '基础属性 data-test 验证失败'\n        return\n      }\n      this.validateGeneralAttrText = '基础属性验证成功'\n    },\n    changeHeight(){\n      const generalTarget = this.$refs['general-target'] as UniElement\n      this.changeHeightByRefText = '已通过 ref 修改高度'\n      generalTarget.style.setProperty('height', '200px')\n    }\n  },\n}\n\n```\n:::"}}