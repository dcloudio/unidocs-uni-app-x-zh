{"uniCloud_props":{"name":"# uniCloud","description":"","param":"## 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| config | **UniCloudInitOptions** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| provider | string | 是 | - | 服务商，目前支持 aliyun、tencent、alipay |\n@| spaceName | string | 否 | - | 服务空间名 |\n@| spaceId | string | 是 | - | 服务空间id |\n@| clientSecret | string | 否 | - | 阿里云clientSecret |\n@| endpoint | string | 否 | - | 阿里云endpoint |\n@| spaceAppId | string | 否 | - | 支付宝小程序云spaceAppId |\n@| accessKey | string | 否 | - | 支付宝小程序云accessKey |\n@| secretKey | string | 否 | - | 支付宝小程序云secretKey |\n| mixinDatacom | any | 是 | - | - | \n","returnValue":"","compatibility":"","tutorial":""},"callFunction":{"name":"## callFunction(options) @callfunction","description":"请求云函数","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | [UniCloudCall() => voidOptions](#unicloudcallfunctionoptions-values) | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| name | string \\| [string.Cloud() => voidString](/uts/data-type.md#ide-string) | 是 | - | 云函数名 |\n@| data | any | 否 | - | 云函数参数 | \n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise\\<[UniCloudCall() => voidResult](#unicloudcallfunctionresult-values)> |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| result | any | 是 | - | 云函数返回结果 |\n@| requestId | string | 否 | - | 云函数请求id | \n","compatibility":"### callFunction 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-call-function.callFunction)\n"},"unicloud-call-function":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-call-function/unicloud-call-function.uvue) \n ```vue\n<template>\r\n  <!-- #ifdef APP -->\r\n  <scroll-view class=\"page-scroll-view\">\r\n  <!-- #endif -->\r\n    <view>\r\n      <page-head :title=\"title\"></page-head>\r\n      <view class=\"uni-padding-wrap uni-common-mt\">\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @click=\"callFunction\">请求云函数</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  <!-- #ifdef APP -->\r\n  </scroll-view>\r\n  <!-- #endif -->\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        title: '请求云函数',\r\n        callFunctionResult: {},\r\n        callFunctionError: {},\r\n        isUniTest: false\r\n      }\r\n    },\r\n    onLoad() {\r\n    },\r\n    onUnload() {\r\n      if (this.isUniTest) {\r\n        uni.hideToast()\r\n      }\r\n    },\r\n    methods: {\r\n      notify(content : string, title : string) {\r\n        if (!this.isUniTest) {\r\n          uni.showModal({\r\n            title,\r\n            content,\r\n            showCancel: false\r\n          })\r\n        } else {\r\n          console.log(title, content)\r\n        }\r\n      },\r\n      async callFunction() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        await uniCloud.callFunction({\r\n          name: 'echo-cf',\r\n          data: {\r\n            num: 1,\r\n            str: 'ABC'\r\n          }\r\n        }).then(res => {\r\n          const result = res.result\r\n          this.callFunctionResult = result\r\n          console.log(JSON.stringify(result))\r\n          uni.hideLoading()\r\n          this.notify(result['showMessage'] as string, '提示')\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          this.callFunctionError = {\r\n            errCode: error.errCode,\r\n            errMsg: error.errMsg\r\n          }\r\n          uni.hideLoading()\r\n          this.notify(error.errMsg, '错误')\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n```"},"importObject":{"name":"## importObject(objectName, options?) @importobject","description":"引用云对象","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| objectName | string \\| [string.CloudObjectString](/uts/data-type.md#ide-string) | 是 | - | - |\n| options | **UniCloudImportObjectOptions** | 否 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| customUI | boolean \\| null | 否 | - | 是否移除自动展示的ui |\n@| loadingOptions | **UniCloudImportObjectLoadingOptions** \\| null | 否 | - | loading界面配置 |\n@@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@@| :- | :- | :- | :- | :- |\n@@| title | string \\| null | 否 | - | 加载框标题 |\n@@| mask | boolean \\| null | 否 | - | 加载框是否显示mask |\n@| errorOptions | **UniCloudImportObjectErrorOptions** \\| null | 否 | - | 错误提示配置 |\n@@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@@| :- | :- | :- | :- | :- |\n@@| type | string \\| null | 否 | - | 错误提示类型，可以是modal或者toast |\n@@| retry | boolean \\| null | 否 | - | 是否显示重试按钮 | \n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| any | \n","compatibility":"### importObject 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-import-object.importObject)\n"},"unicloud-import-object":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-import-object/unicloud-import-object.uvue) \n ```vue\n<template>\r\n  <!-- #ifdef APP -->\r\n  <scroll-view class=\"page-scroll-view\">\r\n  <!-- #endif -->\r\n    <view>\r\n      <page-head :title=\"title\"></page-head>\r\n      <view class=\"uni-padding-wrap uni-common-mt\">\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @tap=\"addTodo\">添加Todo</button>\r\n        </view>\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @tap=\"randomFail\">随机触发失败重试</button>\r\n        </view>\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @tap=\"fail\">云对象失败调用</button>\r\n        </view>\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @tap=\"failWithNumberErrCode\">云对象数字错误码</button>\r\n        </view>\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @tap=\"success\">云对象成功调用</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  <!-- #ifdef APP -->\r\n  </scroll-view>\r\n  <!-- #endif -->\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        title: '请求云对象',\r\n        todoTitle: '学习编程',\r\n        todoContent: '熟悉uts语法',\r\n        returnTodoTitle: '',\r\n        returnTodoContent: '',\r\n        failErrCode: '',\r\n        failNumberErrCode: 0,\r\n        successErrCode: -1,\r\n        isUniTest: false\r\n      }\r\n    },\r\n    methods: {\r\n      notify(content : string, title : string) {\r\n        if (!this.isUniTest) {\r\n          uni.showModal({\r\n            title,\r\n            content,\r\n            showCancel: false\r\n          })\r\n        } else {\r\n          console.log(title, content)\r\n        }\r\n      },\r\n      async addTodo() : Promise<void> {\r\n        const todo = uniCloud.importObject('todo', {\r\n          customUI: this.isUniTest\r\n        })\r\n        const title = this.todoTitle\r\n        const content = this.todoContent\r\n        await todo.add(title, content).then((res : UTSJSONObject) => {\r\n          this.returnTodoTitle = res['title'] as string\r\n          this.returnTodoContent = res['content'] as string\r\n          this.notify(res['showMessage'] as string, '提示')\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          console.error(error)\r\n        })\r\n      },\r\n      async randomFail() : Promise<void> {\r\n        const todoObj = uniCloud.importObject('todo', {\r\n          errorOptions: {\r\n            retry: true\r\n          }\r\n        })\r\n        await todoObj.randomFail().then((res : UTSJSONObject) => {\r\n          this.notify(res['showMessage'] as string, '提示')\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          console.error(error)\r\n        })\r\n      },\r\n      async fail() : Promise<void> {\r\n        const todo = uniCloud.importObject('todo', {\r\n          customUI: this.isUniTest\r\n        })\r\n        await todo.fail().then((res : UTSJSONObject) => {\r\n          this.notify('todo.fail应调用失败，此处错误的触发了成功回调', '错误')\r\n          console.log('todo.fail: ', res);\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          this.failErrCode = error.errCode as string\r\n          console.error(error)\r\n        })\r\n      },\r\n      async failWithNumberErrCode() : Promise<void> {\r\n        const todo = uniCloud.importObject('todo', {\r\n          customUI: this.isUniTest\r\n        })\r\n        await todo.failWithNumberErrCode().then((res : UTSJSONObject) => {\r\n          this.notify('todo.fail应调用失败，此处错误的触发了成功回调', '错误')\r\n          console.log('todo.fail: ', res);\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          this.failNumberErrCode = error.errCode as number\r\n          console.error(error)\r\n        })\r\n      },\r\n      async success() : Promise<void> {\r\n        const todo = uniCloud.importObject('todo', {\r\n          customUI: this.isUniTest\r\n        })\r\n        await todo.success().then((res : UTSJSONObject) => {\r\n          this.successErrCode = res['errCode'] as number\r\n          this.notify(res['showMessage'] as string, '提示')\r\n        }).catch((err : any | null) => {\r\n          const error = err as UniCloudError\r\n          console.error(error)\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\n```"},"uploadFile":{"name":"## uploadFile(options) @uploadfile","description":"上传文件到云存储","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | **UniCloudUploadFileOptions** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| filePath | string | 是 | - | 文件路径 |\n@| cloudPath | string | 是 | - | 云端路径 |\n@| cloudPathAsRealPath | boolean | 否 | - | 是否以云端路径是否为真实路径保存上传的文件 | \n\n#### UniCloudUploadFileOptions 的方法 @uniclouduploadfileoptions-values \n\n#### onUploadProgress(options) @onuploadprogress\n\r\n上传进度回调\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | **UniCloudUploadProgress** | 是 | - | 上传进度回调参数 |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| loaded | number | 是 | - | 已上传大小 |\n@| total | number | 是 | - | 总大小 | \n\n##### 返回值 \n\n| 类型 |\n| :- |\n| any | \n\n\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise\\<**UniCloudUploadFileResult**> |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| filePath | string | 是 | - | 文件路径 |\n@| fileID | string | 是 | - | 文件id | \n","compatibility":"### uploadFile 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-file-api.upload-file)\n"},"getTempFileURL":{"name":"## getTempFileURL(options) @gettempfileurl","description":"获取文件临时URL","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | **UniCloudGetTempFileURLOptions** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| fileList | Array\\<string\\> | 是 | - | 文件列表 | \n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise\\<**UniCloudGetTempFileURLResult**> |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| fileList | Array\\<**UniCloudGetTempFileURLResultItem**\\> | 是 | - | 文件列表 |\n@@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@@| :- | :- | :- | :- | :- |\n@@| fileID | string | 是 | - | 文件id |\n@@| tempFileURL | string | 是 | - | 文件临时url | \n","compatibility":"### getTempFileURL 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-file-api.choose-and-upload-file)\n"},"chooseAndUploadFile":{"name":"## chooseAndUploadFile(options) @chooseanduploadfile","description":"选择并上传文件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | **UniCloudChooseAndUploadFileOptions** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| sourceType | Array\\<string\\> \\| null | 否 | - |  |\n@| count | number \\| null | 否 | - |  |\n@| sizeType | Array\\<string\\> \\| null | 否 | - |  |\n@| extension | Array\\<string\\> \\| null | 否 | - |  |\n@| compressed | boolean \\| null | 否 | - |  |\n@| maxDuration | number \\| null | 否 | - |  |\n@| camera | string \\| null | 否 | - |  |\n@| crop | ChooseImageCropOptions \\| null | 否 | - |  |\n@| type | string | 是 | - | - | \n\n#### UniCloudChooseAndUploadFileOptions 的方法 @unicloudchooseanduploadfileoptions-values \n\n#### onChooseFile(arg) @onchoosefile\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| arg | **UniCloudChooseFileResult** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| tempFiles | Array\\<**UniCloudChooseFileItem**\\> | 是 | - | - |\n@@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@@| :- | :- | :- | :- | :- |\n@@| name | string | 是 | - | - |\n@@| path | string | 是 | - | - |\n@@| cloudPath | string | 是 | - | - |\n@@| cloudPathAsRealPath | boolean \\| null | 否 | - |  |\n@@| url | string \\| null | 否 | - |  |\n@@| errMsg | string \\| null | 否 | - |  |\n@| tempFilePaths | Array\\<string\\> | 是 | - | - | \n\n##### 返回值 \n\n| 类型 | 必备 |\n| :- | :- |\n| void \\| null | 否 | \n\n\n\n#### onUploadProgress(arg) @onuploadprogress\n\n##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| arg | **UniCloudChooseAndUploadFileProgressEvent** | 是 | - | - |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| index | number | 是 | - | - |\n@| loaded | number | 是 | - | - |\n@| total | number | 是 | - | - |\n@| tempFilePath | string | 是 | - | - |\n@| tempFile | [UniCloudChooseFileItem](#unicloudchoosefileitem-values) | 是 | - | - | \n\n##### 返回值 \n\n| 类型 | 必备 |\n| :- | :- |\n| void \\| null | 否 | \n\n\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise\\<**UniCloudChooseAndUploadFileResult**> |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| tempFiles | Array\\<**UniCloudChooseFileItem**\\> | 是 | - | - |\n@@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@@| :- | :- | :- | :- | :- |\n@@| name | string | 是 | - | - |\n@@| path | string | 是 | - | - |\n@@| cloudPath | string | 是 | - | - |\n@@| cloudPathAsRealPath | boolean \\| null | 否 | - |  |\n@@| url | string \\| null | 否 | - |  |\n@@| errMsg | string \\| null | 否 | - |  |\n@| tempFilePaths | Array\\<string\\> | 是 | - | - | \n","compatibility":"### chooseAndUploadFile 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-file-api.getTempFileURL)\n"},"unicloud-file-api":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-file-api/unicloud-file-api.uvue) \n ```vue\n<template>\r\n  <!-- #ifdef APP -->\r\n  <scroll-view class=\"page-scroll-view\">\r\n  <!-- #endif -->\r\n    <view>\r\n      <page-head :title=\"title\"></page-head>\r\n      <view class=\"uni-padding-wrap uni-common-mt\">\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @click=\"uploadFile\">选择文件上传</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  <!-- #ifdef APP -->\r\n  </scroll-view>\r\n  <!-- #endif -->\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        title: '云存储'\r\n      }\r\n    },\r\n    onLoad() {\r\n    },\r\n    onUnload() {\r\n    },\r\n    methods: {\r\n      uploadFile: function () {\r\n        uni.chooseImage({\r\n          count: 1,\r\n          success(res) : void {\r\n            uni.showLoading({\r\n              title: '上传中...'\r\n            })\r\n            const tempFilePath = res.tempFilePaths[0]\r\n            uniCloud.uploadFile({\r\n              filePath: tempFilePath,\r\n              cloudPath: 'test.jpg'\r\n            })\r\n              .then(function (res) {\r\n                uni.hideLoading()\r\n                console.log(res)\r\n                uni.showModal({\r\n                  content: '上传成功',\r\n                  showCancel: false\r\n                });\r\n              })\r\n              .catch(function (err : any | null) {\r\n                uni.hideLoading()\r\n                const error = err as UniCloudError\r\n                uni.showModal({\r\n                  content: '上传失败，' + error.errMsg,\r\n                  showCancel: false\r\n                });\r\n              })\r\n            // .finally((_: number) : void => {\r\n            //   uni.hideLoading()\r\n            // })\r\n          },\r\n          fail(err) : void {\r\n            console.error('chooseImage fail: ', err)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n```"},"databaseForJQL":{"name":"## databaseForJQL() @databaseforjql","description":"获取数据库操作实例","param":"","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| **Database** |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| command | any | 是 | - | - |\n@| Geo | any | 是 | - | - | \n","compatibility":"### databaseForJQL 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.91，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-database.databaseForJQL)\n"},"unicloud-database":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-database/unicloud-database.uvue) \n ```vue\n<template>\r\n  <!-- #ifdef APP -->\r\n  <scroll-view class=\"page-scroll-view\">\r\n  <!-- #endif -->\r\n    <view>\r\n      <page-head :title=\"title\"></page-head>\r\n      <view class=\"uni-padding-wrap uni-common-mt\">\r\n        <view class=\"uni-btn-v uni-common-mt\">\r\n          <button type=\"primary\" @click=\"dbAdd\">新增单条数据</button>\r\n          <button type=\"primary\" @click=\"dbBatchAdd\">新增多条数据</button>\r\n          <button type=\"primary\" @click=\"dbUpdate\">更新数据</button>\r\n          <button type=\"primary\" @click=\"dbGet\">where传字符串获取数据</button>\r\n          <button type=\"primary\" @click=\"dbGetWithCommand\">where传对象获取数据</button>\r\n          <button type=\"primary\" @click=\"dbRemove\">删除数据</button>\r\n          <button type=\"primary\" @click=\"dbLookupInit\">初始化联表查询数据</button>\r\n          <button type=\"primary\" @click=\"dbLookup\">联表查询</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  <!-- #ifdef APP -->\r\n  </scroll-view>\r\n  <!-- #endif -->\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        title: 'ClientDB',\r\n        addId: '',\r\n        batchAddIds: [] as Array<string>,\r\n        batchAddinserted: 0,\r\n        updateUpdated: 0,\r\n        getData: [] as Array<UTSJSONObject>,\r\n        getWithCommandData: [] as Array<UTSJSONObject>,\r\n        removeDeleted: 0,\r\n        lookupData: [] as Array<UTSJSONObject>,\r\n        isUniTest: false\r\n      }\r\n    },\r\n    computed: {\r\n      dataTag() : string {\r\n        return this.isUniTest ? 'default-tag' + Date.now() : 'default-tag'\r\n      }\r\n    },\r\n    methods: {\r\n      notify(content : string, title : string) {\r\n        if (!this.isUniTest) {\r\n          uni.showModal({\r\n            title,\r\n            content,\r\n            showCancel: false\r\n          })\r\n        } else {\r\n          console.log(title, content)\r\n        }\r\n      },\r\n      async dbAdd() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .add({\r\n            num: 1,\r\n            tag: this.dataTag,\r\n            date: new Date()\r\n          })\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.addId = res.id\r\n            this.notify(`新增成功，id: ${res.id}`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbBatchAdd() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .add([{\r\n            num: 2,\r\n            tag: this.dataTag,\r\n          }, {\r\n            num: 3,\r\n            tag: this.dataTag,\r\n          }])\r\n          .then((res) => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            console.log('JSON.stringify(res.inserted)', JSON.stringify(res.inserted))\r\n            this.batchAddIds = res.ids\r\n            this.batchAddinserted = res.inserted\r\n            this.notify(`新增成功条数${res.inserted}, id列表: ${res.ids.join(',')}`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbGet() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .where(\r\n            `tag == \"${this.dataTag}\"`\r\n          )\r\n          .field('num, tag')\r\n          .orderBy('num desc')\r\n          .skip(1)\r\n          .limit(2)\r\n          .get()\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.getData = res.data\r\n            this.notify(`获取成功，取到了${res.data.length}条数据`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbGetWithCommand() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .where({\r\n            num: db.command.gt(1),\r\n            tag: this.dataTag\r\n          })\r\n          .field('num, tag')\r\n          .orderBy('num desc')\r\n          .skip(1)\r\n          .limit(2)\r\n          .get()\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.getWithCommandData = res.data\r\n            this.notify(`获取成功，取到了${res.data.length}条数据`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbUpdate() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .where(\r\n            `tag == \"${this.dataTag}\"`\r\n          )\r\n          .update({\r\n            num: 4\r\n          })\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.updateUpdated = res.updated\r\n            this.notify(`更新成功，更新了${res.updated}条数据`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbRemove() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('type')\r\n          .where(\r\n            `tag == \"${this.dataTag}\"`\r\n          )\r\n          .remove()\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.removeDeleted = res.deleted\r\n            this.notify(`删除成功，删掉了${res.deleted}条数据`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbLookupInit() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        await db.collection('local')\r\n          .where(`tag == \"${this.dataTag}\"`)\r\n          .remove()\r\n          .then(() : Promise<UniCloudDBRemoveResult> => {\r\n            return db.collection('foreign')\r\n              .where(`tag == \"${this.dataTag}\"`)\r\n              .remove()\r\n          })\r\n          .then(() : Promise<UniCloudDBBatchAddResult> => {\r\n            return db.collection('local')\r\n              .add([{\r\n                id: \"local_1\",\r\n                name: \"local_1_name\",\r\n                tag: this.dataTag,\r\n                foreign_id: \"foreign_1\"\r\n              }, {\r\n                id: \"local_2\",\r\n                name: \"local_2_name\",\r\n                tag: this.dataTag,\r\n                foreign_id: \"foreign_2\"\r\n              }])\r\n          })\r\n          .then(() : Promise<UniCloudDBBatchAddResult> => {\r\n            return db.collection('foreign')\r\n              .add([{\r\n                id: \"foreign_1\",\r\n                name: \"foreign_1_name\",\r\n                tag: this.dataTag\r\n              }, {\r\n                id: \"foreign_2\",\r\n                name: \"foreign_2_name\",\r\n                tag: this.dataTag\r\n              }])\r\n          })\r\n          .then((_) : void => {\r\n            uni.hideLoading()\r\n            this.notify('数据初始化成功', '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            console.error(err)\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      },\r\n      async dbLookup() : Promise<void> {\r\n        uni.showLoading({\r\n          title: '加载中...'\r\n        })\r\n        const db = uniCloud.databaseForJQL()\r\n        const local = db.collection('local')\r\n          .where(`tag == \"${this.dataTag}\"`)\r\n          .getTemp()\r\n        const foreign = db.collection('foreign')\r\n          .where(`tag == \"${this.dataTag}\"`)\r\n          .getTemp()\r\n        await db.collection(local, foreign)\r\n          .get()\r\n          .then(res => {\r\n            uni.hideLoading()\r\n            console.log(res)\r\n            this.lookupData = res.data\r\n            this.notify(`联表查询成功，取到了${res.data.length}条数据`, '提示')\r\n          })\r\n          .catch((err : any | null) => {\r\n            uni.hideLoading()\r\n            const error = err as UniCloudError\r\n            this.notify(error.errMsg, '错误')\r\n          })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n```"},"onResponse":{"name":"## onResponse(callback) @onresponse","description":"监听响应事件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| callback | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any \\| null | 是 | - | - | \n\n#### UniCloudResponseEvent 的属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### onResponse 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-utils.get-current-user-info)\n"},"offResponse":{"name":"## offResponse(callback) @offresponse","description":"移除响应事件监听","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| callback | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any \\| null | 是 | - | - | \n\n#### UniCloudResponseEvent 的属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### offResponse 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-utils.on-response)\n"},"onRefreshToken":{"name":"## onRefreshToken(callback) @onrefreshtoken","description":"监听token刷新事件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| callback | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any \\| null | 是 | - | - | \n\n#### UniCloudResponseEvent 的属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### onRefreshToken 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-utils.off-response)\n"},"offRefreshToken":{"name":"## offRefreshToken(callback) @offrefreshtoken","description":"移除token刷新事件监听","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| callback | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any \\| null | 是 | - | - | \n\n#### UniCloudResponseEvent 的属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### offRefreshToken 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-utils.on-refresh-token)\n"},"getCurrentUserInfo":{"name":"## getCurrentUserInfo() @getcurrentuserinfo","description":"获取token内缓存的用户信息","param":"","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| **UniCloudUserInfo** |\n@| 名称 | 类型 | 必备 | 默认值 | 描述 |\n@| :- | :- | :- | :- | :- |\n@| uid | string \\| null | 否 | - | serInfo = {<br/>    / |\n@| role | Array\\<string\\> | 是 | - | ing \\| null;     /** |\n@| permission | Array\\<string\\> | 是 | - | ay\\<string>;     /** |\n@| tokenExpired | number | 是 | - | ay\\<string>;     /** | \n","compatibility":"### getCurrentUserInfo 兼容性 \n| Android | iOS | web |\n| :- | :- | :- |\n| 阿里云 3.9，腾讯云 3.91 | x | - |\n","tutorial":"\n### 参见\n[相关 Bug](https://issues.dcloud.net.cn/?mid=api.unicloud.unicloud-utils.off-refresh-token)\n"}}